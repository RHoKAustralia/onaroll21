"use strict";function updateUsingUniWebView(_bool){return usingUniWebView=_bool,"usingUniWebView: "+usingUniWebView}var userid="",groupid="",missionTitle="",todayMission="",didyouknow="",reference="",taskid="",postAsImg="",usingUniWebView="false",postReportIDs="",commentReportIDs=[],postReportIDs=[],currentUnixTIme=Math.floor(Date.now()/1e3),conversationID="",currentRoute="",absolutePath="http://new.onaroll21.com",appViews={updateProgress:function(value){$(".progress-bar").css({width:value+"%"})},progressError:function(msg){$("#progressMsg").html(msg),$("#progressMsg").show(),$("#progressLoader").on("click",function(){console.log("PL: Click"),$("#progressMsg").hide(),$(this).off("click"),$("#progressLoader").remove()})}},app=angular.module("oar21",["ngAnimate","ngCookies","ngResource","ngRoute","ngSanitize","ngTouch","ngUpload","shoppinpal.mobile-menu","ngDialog","ngFileUpload","angular-svg-round-progress"]).config(function($routeProvider,$compileProvider){$routeProvider.when("/loadApp",{templateUrl:"templates/loading-app.html?v="+currentUnixTIme,controller:"LoadAppCtrl"}).when("/IEDetected",{templateUrl:"templates/iedetected.html?v="+currentUnixTIme}).when("/login",{templateUrl:"templates/login.html?v="+currentUnixTIme,controller:"LoginCtrl"}).when("/login/playerID/:pid",{templateUrl:"templates/login.html?v="+currentUnixTIme,controller:"LoginCtrl"}).when("/forgot-pwd",{templateUrl:"templates/forgotPwd.html?v="+currentUnixTIme,controller:"LoginCtrl"}).when("/newAccount",{templateUrl:"templates/sign-up.html?v="+currentUnixTIme,controller:"SignUpCtrl"}).when("/newAccount/:cc",{templateUrl:"templates/sign-up.html?v="+currentUnixTIme,controller:"SignUpCtrl"}).when("/newAccount/:cc/:token",{templateUrl:"templates/sign-up.html?v="+currentUnixTIme,controller:"SignUpCtrl"}).when("/bypasslogin/:user/:password/:url",{templateUrl:"templates/login.html?v="+currentUnixTIme,controller:"LoginCtrl"}).when("/main",{templateUrl:"templates/posts.html?v="+currentUnixTIme,controller:"WallCtrl"}).when("/journal",{templateUrl:"templates/journal.html?v="+currentUnixTIme,controller:"JournalCtrl"}).when("/play",{templateUrl:"templates/dice.html?v="+currentUnixTIme,controller:"DiceCtrl"}).when("/profile",{templateUrl:"templates/profile.html?v="+currentUnixTIme,controller:"MainCtrl"}).when("/missionCompleted",{templateUrl:"templates/mission-completed.html?v="+currentUnixTIme,controller:"MissionCompletedCtrl"}).when("/messages",{templateUrl:"templates/messages.html?v="+currentUnixTIme,controller:"MessageCtrl"}).when("/messages/:id",{templateUrl:"templates/messages.html?v="+currentUnixTIme,controller:"MessageLocationCtrl"}).when("/notifications",{templateUrl:"templates/notifications.html?v="+currentUnixTIme,controller:"NotificationCtrl"}).when("/nmSelectGroup",{templateUrl:"templates/messagesSelectGroup.html?v="+currentUnixTIme,controller:"MessageSelectGroupCtrl"}).when("/nmSelectUser",{templateUrl:"templates/messagesSelectUser.html?v="+currentUnixTIme,controller:"MessageSelectUserCtrl"}).when("/groupmessage",{templateUrl:"templates/groupMessage.html?v="+currentUnixTIme,controller:"GroupMessageCtrl"}).when("/groupmessage/:roomid",{templateUrl:"templates/groupMessage.html?v="+currentUnixTIme,controller:"GroupMessageCtrl"}).when("/groupMessageList",{templateUrl:"templates/groupMessageList.html?v="+currentUnixTIme,controller:"GroupMessageListCtrl"}).when("/message/:id",{templateUrl:"templates/messageView.html?v="+currentUnixTIme,controller:"MessageViewCtrl"}).when("/message/view/:id",{templateUrl:"templates/messageView.html?v="+currentUnixTIme,controller:"MessageViewCtrl"}).when("/mission",{templateUrl:"templates/mission.html?v="+currentUnixTIme,controller:"MainCtrl"}).when("/wall",{templateUrl:"templates/posts.html?v="+currentUnixTIme,controller:"WallCtrl"}).when("/wall/:postid",{templateUrl:"templates/posts.html?v="+currentUnixTIme,controller:"WallCtrl"}).when("/montage",{templateUrl:"templates/photo-montage.html?v="+currentUnixTIme,controller:"MainCtrl"}).when("/groups",{templateUrl:"templates/group-list.html?v="+currentUnixTIme,controller:"MainCtrl"}).when("/newpost",{templateUrl:"templates/post-new.html?v="+currentUnixTIme,controller:"PostsCtrl"}).when("/editpost",{templateUrl:"templates/editPost.html?v="+currentUnixTIme,controller:"PostEditCtrl"}).when("/accountSettings",{templateUrl:"templates/accountSettings.html?v="+currentUnixTIme,controller:"AccountSettingsCtrl"}).when("/postas",{templateUrl:"templates/post-as.html?v="+currentUnixTIme,controller:"PostAsCtrl"}).when("/presurveyintro",{templateUrl:"templates/presurveyintro.html?v="+currentUnixTIme,controller:"PreSurveyCtrl"}).when("/postsurveyintro",{templateUrl:"templates/postsurveyintro.html?v="+currentUnixTIme,controller:"PostSurveyCtrl"}).when("/postsurvey",{templateUrl:"templates/postsurvey.html?v="+currentUnixTIme,controller:"PostSurveyCtrl"}).when("/presurvey",{templateUrl:"templates/presurvey.html?v="+currentUnixTIme,controller:"PreSurveyCtrl"}).when("/howto",{templateUrl:"templates/how-to-play.html?v="+currentUnixTIme,controller:"HowtoCtrl"}).when("/supportTicket",{templateUrl:"templates/support-ticket.html?v="+currentUnixTIme,controller:"SupportTicketCtrl"}).when("/supportTicketOut",{templateUrl:"templates/support-ticket-outside.html?v="+currentUnixTIme,controller:"SupportTicketCtrl"}).when("/about",{templateUrl:"templates/about.html?v="+currentUnixTIme,controller:"MainCtrl"}).when("/support",{templateUrl:"templates/support.html?v="+currentUnixTIme,controller:"SupportCtrl"}).when("/legal",{templateUrl:"templates/legal.html?v="+currentUnixTIme,controller:"LegalCtrl"}).when("/howtoOutside",{templateUrl:"templates/how-to-play-outside.html?v="+currentUnixTIme,controller:"HowtoOutsideCtrl"}).when("/notificationUserAdmin",{templateUrl:"templates/notificationUserAdmin.html?v="+currentUnixTIme,controller:"NotificationAdminCtrl"}).otherwise({redirectTo:"/main"}),$compileProvider.directive("compile",function($compile){return function(scope,element,attrs){scope.$watch(function(scope){return scope.$eval(attrs.compile)},function(value){element.html(value),$compile(element.contents())(scope)})}})});app.directive("showsMessageWhenHovered",function(){return{Restrict:"A",link:function(scope,element,attributes){scope.message;element.bind("mouseover",function(){scope.message=attributes.message,scope.$apply()}),element.bind("mouseout",function(){scope.message=attributes.message,scope.$apply()})}}}),app.run(function($rootScope){$rootScope.$on("$routeChangeSuccess",function(e,current,pre){currentRoute=current.$$route.originalPath})}),app.run(function($rootScope){angular.element(document).on("click",function(e){$rootScope.$broadcast("documentClicked",angular.element(e.target))})}),angular.module("oar21").directive("ngEnter",function(){return function(scope,element,attrs){element.bind("keydown keypress",function(event){13===event.which&&(scope.$apply(function(){scope.$eval(attrs.ngEnter,{event:event})}),event.preventDefault())})}}),app.directive("fileUpload",function(){return{scope:!0,link:function(scope,el,attrs){el.bind("change",function(event){for(var files=event.target.files,i=0;i<files.length;i++)scope.$emit("fileSelected",{file:files[i]})})}}}),app.directive("fluidvids",function(){return{restrict:"EA",replace:!0,transclude:!0,scope:{video:"@"},template:'<div class="fluidvids"><iframe ng-src="{{ video }}"></iframe></div>',link:function(scope,element,attrs){var ratio=attrs.height/attrs.width*100;element[0].style.paddingTop=ratio+"%"}}}),app.directive("imageonload",function(){return{restrict:"A",link:function(scope,element,attrs){element.bind("load",function(){scope.$apply(attrs.imageonload)})}}}),app.directive("loadMoreData",[function(){return{restrict:"A",link:function($scope,element,attrs,ctrl){var raw=element;window.location.hash;$("body").scroll(function(){var docViewTop=$(window).scrollTop(),docViewBottom=docViewTop+$(window).height(),elemTop=raw.offset().top,elemBottom=elemTop+raw.height();docViewBottom>=elemBottom&&elemTop>=docViewTop&&$scope.$apply("loadMoreData()")})}}}]),app.directive("termsAgreement",function(){return{restrict:"E",templateUrl:"templates/legal.html"}}),app.directive("moodMap",function(){return{restrict:"E",templateUrl:"templates/widgets/moodmap.html"}}),angular.module("loaded",[]).directive("repeatHelloWorld",function(){return{link:function(scope,elem,attrs,ctrl){var hello=function(){for(var i=0;i<attrs.repeatHelloWorld;i++);};hello()}}}),angular.module("ng").filter("cut",function(){return function(value,wordwise,max,tail){if(!value)return"";if(max=parseInt(max,10),!max)return value;if(value.length<=max)return value;if(value=value.substr(0,max),wordwise){var lastspace=value.lastIndexOf(" ");-1!=lastspace&&(value=value.substr(0,lastspace))}return value+(tail||" â€¦")}}),app.directive("pageHeader",function(){return{restrict:"E",templateUrl:"templates/widgets/page-header.html?v="+currentUnixTIme,controller:function($scope,$location,SessionService){$scope.sessionUser=angular.fromJson(SessionService.get("user"));var noHeaderPages=["login","forgot-pwd","newAccount","about","legal","supportTicketOut","presurveyintro","presurvey","postsurveyintro","postsurvey"];$("#dropdownMenu");$scope.toggleLeftMenu=function(){$("#side-menu").hasClass("menu-default")?($("#side-menu").show().toggleClass("menu-default menu-slided"),$(".side-menu-layer").show()):($("#side-menu").hide().toggleClass("menu-default menu-slided"),$(".side-menu-layer").hide())},$scope.toggleRightMenu=function(){$("#group-users-menu").hasClass("menu-default")?($("#group-users-menu").show().toggleClass("menu-default menu-slided"),$(".side-menu-layer").show()):($("#group-users-menu").hide().toggleClass("menu-default menu-slided"),$(".side-menu-layer").hide())},$scope.$watch(function(){return $location.path()},function(url){$scope.noHeader=!1,$scope.noFooter=!1;for(var i in noHeaderPages)url.indexOf(noHeaderPages[i])>=0&&($scope.noHeader=!0,$scope.noFooter=!0)})}}}),app.directive("notificationCont",function(){return{restrict:"E",templateUrl:"templates/widgets/notification.html?v="+currentUnixTIme}}),app.directive("postasHeader",function(){return{restrict:"E",templateUrl:"templates/alerts/post-as-ckboxs.html?v="+currentUnixTIme}}),app.directive("sideMenu",function(){return{restrict:"E",templateUrl:"templates/widgets/side-menu.html?v="+currentUnixTIme,link:function(){$(".side-menu-layer, #side-menu a, #side-menu .close-link").click(function(){$("#side-menu").hasClass("menu-slided")&&($("#side-menu").hide().toggleClass("menu-default menu-slided"),$(".side-menu-layer").hide())})}}}),app.directive("groupUsers",function(){return{restrict:"E",templateUrl:"templates/widgets/group-users.html?v="+currentUnixTIme,controller:function($scope,$filter,SessionService,$http){$(".side-menu-layer, #group-users-menu .close-link").click(function(){$("#group-users-menu").hasClass("menu-slided")&&($("#group-users-menu").hide().toggleClass("menu-default menu-slided"),$(".side-menu-layer").hide())}),$scope.closeMenu=function(){$("#group-users-menu").hasClass("menu-slided")&&($("#group-users-menu").hide().toggleClass("menu-default menu-slided"),$(".side-menu-layer").hide())},$scope.openSingleMessage=function(recipient){var currentUser=JSON.parse(SessionService.get("user")),messageUsers=[],conversationID=null;messageUsers.push({id:currentUser.id,full_name:currentUser.firstname+" "+currentUser.lastname},{id:recipient.id,full_name:recipient.firstname+" "+recipient.lastname}),SessionService.set("selectedUsers",JSON.stringify(messageUsers)),$http.post(absolutePath+"/api/service/groupmessage/addUserToConversation",{userlist:JSON.stringify(messageUsers),conversationID:conversationID,type:"single"}).success(function(data,status,headers,config){location.href="#/message/view/"+JSON.parse(data)})}}}}),app.directive("quicklinksHeader",function(){return{restrict:"E",templateUrl:"templates/widgets/quicklinks-header.html?v="+currentUnixTIme}}),app.directive("groupList",function(){return{restrict:"E",templateUrl:"templates/widgets/group-list.html?v="+currentUnixTIme}}),app.directive("wallWidget",function(){return{restrict:"E",templateUrl:"templates/widgets/wall-widget.html?v="+currentUnixTIme}}),app.directive("photoMontage",function(){return{restrict:"E",templateUrl:"templates/widgets/photo-montage.html?v="+currentUnixTIme}}),app.directive("wordCloud",function(){return{restrict:"E",templateUrl:"templates/widgets/word-cloud.html?v="+currentUnixTIme}}),app.directive("goBack",function(){return{restrict:"A",link:function(scope,element,attributes){element.on("click",function(){"#/main"!=window.location.hash&&window.history.go(-1)})}}}),app.directive("scrollTop",function(){return{restrict:"E",templateUrl:"templates/widgets/scroll-top.html",scope:{id:"="},link:function(){function detectPos(){wrapper.scrollTop()>200?scrollBtn.fadeIn():scrollBtn.fadeOut()}function goTop(){wrapper.animate({scrollTop:0},500)}var scrollBtn=angular.element(".scroll-to-top"),wrapper=angular.element(".scrollable-wrapper");scrollBtn.on("click",goTop),wrapper.on("scroll",detectPos)}}}),app.directive("selectUsers",function(){return{restrict:"E",templateUrl:"templates/widgets/select-users.html",scope:{users:"=",currentUser:"="},controller:function($scope,$filter,SessionService,$http){$scope.checkSelectedUsers=function(){var selectedUsers=JSON.parse(SessionService.get("selectedUsers"));angular.forEach($scope.users,function(userVal,userKey){userVal.checked=!1,angular.forEach(selectedUsers,function(selectedVal,selectedKey){userVal[0].id==selectedVal.id&&(userVal.checked=!0)})})},$scope.$watch(function(){return SessionService.get("selectedUsers")},function(newVal,oldVal){$scope.checkSelectedUsers()}),$scope.openMessage=function(users){$scope.checkMessage="";var checked=$filter("filter")(users,{checked:!0}),currentUser=JSON.parse(SessionService.get("user"));if(checked.length){var selectedUsers=[],type=1==checked.length?"single":"group",conversationID=null;location.href.indexOf("message/view")>=0&&(conversationID=location.href.split("message/view/")[1]),selectedUsers.push({id:currentUser.id,full_name:currentUser.firstname+" "+currentUser.lastname});for(var i in checked)selectedUsers.push({id:checked[i][0].id,full_name:checked[i][0].firstname+" "+checked[i][0].lastname});SessionService.set("selectedUsers",JSON.stringify(selectedUsers)),$(".popup-active").toggleClass("popup-inactive popup-active"),$http.post(absolutePath+"/api/service/groupmessage/addUserToConversation",{userlist:JSON.stringify(selectedUsers),conversationID:conversationID,type:type}).success(function(data,status,headers,config){location.href="#/message/view/"+JSON.parse(data)})}else $scope.checkMessage="Please select at least one user!"}}}}),app.directive("dropdown",function($rootScope){return{restrict:"E",templateUrl:"templates/widgets/select-dropdown.html",scope:{placeholder:"@",list:"=",selected:"=",property:"@"},link:function(scope){scope.listVisible=!1,scope.isPlaceholder=!0,scope.select=function(item){scope.isPlaceholder=!1,scope.selected=item},scope.isSelected=function(item){return item[scope.property]===scope.selected[scope.property]},scope.show=function(){scope.listVisible=!0},$rootScope.$on("documentClicked",function(inner,target){!$(target[0]).is(".dropdown-display.clicked")&&!$(target[0]).parents(".dropdown-display.clicked").length>0&&scope.$apply(function(){scope.listVisible=!1})}),scope.$watch("selected",function(value){scope.isPlaceholder=void 0===scope.selected[scope.property],scope.display=scope.selected[scope.property]})}}}),app.directive("alertSuccess",function(){return{restrict:"E",templateUrl:"templates/alerts/success.html"}}),app.directive("alertError",function(){return{restrict:"E",templateUrl:"templates/alerts/error.html"}}),app.directive("alertFeedback",function(){return{restrict:"E",templateUrl:"templates/alerts/feedback.html"}}),app.directive("alertMoodcheck",function(){return{restrict:"E",templateUrl:"templates/alerts/mood-check.html"}}),app.directive("showWordcloud",function(){return{restrict:"A",link:function(){element.on("click",function(){})}}}),app.directive("toggle",function(){return{restrict:"A",link:function(scope,element,attributes){element.on("click",function(){var target=element.data("target");scope.resetAll(),scope.currentGroup&&(scope[target]=1,"displayPhotoMontage"===target?scope.photoMontage():"displayWordcloud"===target&&scope.displayWordCloud(),scope.$apply())})}}}),app.directive("uploadFile",function(){return{scope:{file:"="},link:function(scope,el,attrs){el.bind("change",function(event){var files=event.target.files,file=files[0];scope.file=file?file.name:void 0,scope.$emit("fileSelected",{file:files[0]})})}}}),app.directive("postScroll",function($window){return{restrict:"A",link:function(){}}}),app.config(function($httpProvider){var logsOutUserOn401=function($location,$q,SessionService,FlashService){var success=function(response){return response},error=function(response){return 401===response.status?(SessionService.unset("authenticated"),SessionService.unset("currentSelectedGroup"),SessionService.unset("currentSelectedGroupDetails"),SessionService.unset("user"),SessionService.unset("surveyskipped"),FlashService.show(response.data.flash),$location.path("/login"),$q.reject(response)):$q.reject(response)};return function(promise){return promise.then(success,error)}};$httpProvider.responseInterceptors.push(logsOutUserOn401)}),app.run(function($rootScope,$location,AuthenticationService,FlashService,SessionService,dropdownService,requestNotificationService,$templateCache,$cacheFactory){var routesThatDontRequireAuth=["/login","/IEDetected","/about","/loadApp","/newAccount","/newAccount/:cc","/newAccount/:cc/:token","/forgot-pwd","/supportTicketOut","/legal","/howtoOutside","/bypasslogin/:user/:password/:url","/login/playerID/:pid"];$rootScope.$on("$viewContentLoaded",function(){$templateCache.removeAll(),"/login"==$location.path()}),$rootScope.$on("$routeChangeStart",function(event,next,current){var tmpPath=$location.path(),n=tmpPath.search("/newAccount/"),m=tmpPath.search("/bypasslogin/"),l=tmpPath.search("/login/playerID/");_(routesThatDontRequireAuth).contains($location.path())||AuthenticationService.isLoggedIn()||0==n||0==m||0==l||$location.path("/login")})}),app.factory("formDataObject",function(){return function(data){var fd=new FormData;return angular.forEach(data,function(value,key){fd.append(key,value)}),fd}}),app.run(function($interval,$http,$rootScope,SessionService,$timeout,dropdownService,requestNotificationService){SessionService.get("user"),$interval(function(){requestNotificationService.notification()},1e4);requestNotificationService.notification(),$rootScope.emoicon=function(message){var html=$("#emoicon-wrapper").html();$("body").append(html),$timeout(function(){$(".popdown").css("top","0")},500)},$rootScope.ajaxLoader=function(){var html="";html+='<div id="progressLoader"><div class="progress-loader"><div class="progress-bar"></div></div><div id="ajax-loader-cover"></div><div id="loader-item"><div id="loader-icon"></div><div id="loader-message" class="theme-text center-align">Please wait</div></div></div>',$("body").prepend(html)},$rootScope.removeAjaxLoader=function(){$("#progressLoader").remove()},$rootScope.contentWrapperLoader=function(){var html="";html+='<div id="content-wrapper-loader"></div> ',$("body").prepend(html)},$rootScope.removeContentWrapperLoader=function(){$("#content-wrapper-loader").fadeOut("fast",function(){$(this).remove()}),$(".content-wrapper").fadeTo("slow",1)},$rootScope.contentNotAvailable=function(targetDiv,content,active){var html="";html+='<div class="contentNotAvailable">'+content+"</div>",$("#"+targetDiv).prepend(html),1==active?$(".contentNotAvailable").css("display","block"):$(".contentNotAvailable").css("display","none")}}),angular.module("ngUpload",[]).directive("uploadSubmit",["$parse",function($parse){function getParentNodeByTagName(element,tagName){element=angular.element(element);var parent=element.parent();return tagName=tagName.toLowerCase(),parent&&parent[0].tagName.toLowerCase()===tagName?parent:parent?getParentNodeByTagName(parent,tagName):null}return{restrict:"AC",link:function(scope,element,attrs){element.bind("click",function($event){if($event&&($event.preventDefault(),$event.stopPropagation()),!element.attr("disabled")){var form=getParentNodeByTagName(element,"form");form.triggerHandler("submit"),form[0].submit()}})}}}]).directive("ngUpload",["$log","$parse","$document",function($log,$parse,$document){function getMetaTagWithName(name){var match,head=$document.find("head");return angular.forEach(head.find("meta"),function(element){element.getAttribute("name")===name&&(match=element)}),angular.element(match)}var iframeID=1;return{restrict:"AC",link:function(scope,element,attrs){function setLoadingState(state){scope.$isUploading=state}function uploadEnd(){alert("UPLAOD DONE"),iframe.unbind("load"),scope.$$phase?setLoadingState(!1):scope.$apply(function(){setLoadingState(!1)});var content,bodyContent=(iframe[0].contentDocument||iframe[0].contentWindow.document).body;try{content=angular.fromJson(bodyContent.innerText||bodyContent.textContent)}catch(e){content=bodyContent.innerHTML,$log.warn("Response is not valid JSON")}scope.$$phase?fn(scope,{content:content}):scope.$apply(function(){fn(scope,{content:content})})}iframeID++;var options={},fn=attrs.ngUpload?$parse(attrs.ngUpload):angular.noop,loading=attrs.ngUploadLoading?$parse(attrs.ngUploadLoading):null;attrs.hasOwnProperty("uploadOptionsConvertHidden")&&(options.convertHidden="false"!=attrs.uploadOptionsConvertHidden),attrs.hasOwnProperty("uploadOptionsEnableRailsCsrf")&&(options.enableRailsCsrf="false"!=attrs.uploadOptionsEnableRailsCsrf),attrs.hasOwnProperty("uploadOptionsBeforeSubmit")&&(options.beforeSubmit=$parse(attrs.uploadOptionsBeforeSubmit)),element.attr({target:"upload-iframe-"+iframeID,method:"post",enctype:"multipart/form-data",encoding:"multipart/form-data"});var iframe=angular.element('<iframe name="upload-iframe-'+iframeID+'" border="0" width="0" height="0" style="width:0px;height:0px;border:none;display:none">');if(options.enableRailsCsrf){var input=angular.element("<input />");input.attr("class","upload-csrf-token"),input.attr("type","hidden"),input.attr("name",getMetaTagWithName("csrf-param").attr("content")),input.val(getMetaTagWithName("csrf-token").attr("content")),element.append(input)}element.after(iframe),setLoadingState(!1),element.bind("submit",function(){var formController=scope[attrs.name];return formController&&formController.$invalid?!1:options.beforeSubmit&&0==options.beforeSubmit(scope,{})?!1:(iframe.bind("load",uploadEnd),options.convertHidden&&angular.forEach(element.find("input"),function(el){var _el=angular.element(el);_el.attr("ng-model")&&_el.attr("type")&&"hidden"==_el.attr("type")&&_el.attr("value",scope.$eval(_el.attr("ng-model")))}),void(scope.$$phase?(loading&&loading(scope),setLoadingState(!0)):scope.$apply(function(){loading&&loading(scope),setLoadingState(!0)})))})}}}]),app.controller("SignUpCtrl",function($scope,$window,$location,AuthenticationService,FlashService,SessionService,$http,$routeParams,$rootScope,dropdownService,$timeout){$scope.Lang=$window.Lang;var receiveNotifications=(localStorage.getItem("username"),!1);$scope.lastID="",$scope.errorMessage="",$scope.showStep1=!0,$scope.showStep2=!1,$scope.showStep3=!1,$("#signup-firstname").focus(),SessionService.unset("liveAppNotificationSession"),SessionService.unset("lastCompletedMission"),SessionService.unset("messageGroupUser"),SessionService.unset("messageid"),SessionService.unset("messageusername"),SessionService.unset("moodCheck"),SessionService.unset("postSurveyCompleted"),SessionService.unset("preSurveyCompleted"),SessionService.unset("usertemp"),$rootScope.contentWrapperLoader(),$scope.isDisabled="false",$scope.newuser={firstname:SessionService.get("temp.fname"),lastname:SessionService.get("temp.lname"),username:SessionService.get("temp.uname"),password:SessionService.get("temp.pword"),email:SessionService.get("temp.email"),confirmemail:SessionService.get("temp.cemail")},$scope.keycode=SessionService.get("temp.kcode"),$scope.receiveNotifications=function(){receiveNotifications=document.getElementById("receive-chrome-pn").checked,1==receiveNotifications&&registerForPush()},$routeParams.cc&&($scope.keycode=$routeParams.cc,$scope.token=$routeParams.token,$scope.isDisabled="true"),$scope.checkKeyCode=function(obj){},$("#signup-form input[type='text'], #signup-form input[type='password']").on("keyup keydown keypress",function(e){$(this).parents(".form-step").attr("id");13==e.keyCode&&e.preventDefault()}),$scope.previousStep=function(step){var previousStep="showStep"+step,currentStep="showStep"+(step+1);$scope[previousStep]=!0,$scope[currentStep]=!1},$scope.enterStep2=function(){$scope.errorMessage1="",$scope.newuser.firstname&&$scope.newuser.lastname?($scope.showStep1=!1,$scope.showStep2=!0):$scope.newuser.firstname?$scope.newuser.lastname||($scope.errorMessage1="Please enter last name",$("#signup-lastname").focus()):($scope.errorMessage1="Please enter first name",$("#signup-firstname").focus())},$scope.enterStep3=function(){$scope.errorMessage2="";var expression=/^([\w-]+(?:\.[\w-]+)*)@((?:[\w-]+\.)*\w[\w-]{0,66})\.([a-z]{2,6}(?:\.[a-z]{2})?)$/;$scope.newuser.email&&expression.test($scope.newuser.email)?$http.post(absolutePath+"/api/signup/isEmailExist",{email:$scope.newuser.email}).success(function(data,status,headers,config){"true"==data?($scope.errorMessage2="This email already exists",$("#signup-email").focus()):$scope.newuser.password?$scope.newuser.confirmpassword&&$scope.newuser.confirmpassword==$scope.newuser.password?($scope.showStep2=!1,$scope.showStep3=!0):($scope.errorMessage2="Password does not match!",$("#signup-confirmpass").focus()):($scope.errorMessage2="Please enter password",$("#signup-pass").focus())}):($scope.errorMessage2="Please enter a valid email",$("#signup-email").focus())},$scope.signUp=function(){$scope.errorMessage3="",$scope.newuser.keycode=$scope.keycode,$scope.newuser.token=$scope.token,$scope.newuser.keycode&&$scope.newuser.securitycode&&$scope.newuser.tos?($rootScope.ajaxLoader(),$http.post(absolutePath+"/api/servcie/signup",$scope.newuser).success(function(data,status,headers,config){return SessionService.set("lastID",data.user_id),"true"==data.status?($location.path("/login"),dropdownService.newDropdown("notification",5e3,"Thanks. You can login below"),receiveNotifications&&pushUsersDeviceToDB(),$timeout(function(){var playerid=SessionService.get("playerid");$http.get("https://onesignal.com/api/v1/players/"+playerid).success(function(data,status,headers,config){$http.post(absolutePath+"/api/service/writePNtoDB",data).success(function(data,status,headers,config){})})},3e3)):($scope.errorMessage3=data.status,"Incorrect answer"==data.status?$("#signup-security").focus():"Your keycode is invalid"==data.status&&$("#keycode").focus()),$rootScope.removeAjaxLoader(),document.getElementById("secuimage").src="/securimage/securimage_show.php?"+Math.random(),!1})):$scope.newuser.securitycode?$scope.newuser.keycode?$scope.newuser.tos||($scope.errorMessage3="Please agree to agreement"):($scope.errorMessage3="Please enter key code",$("#keycode").focus()):($scope.errorMessage3="Please answer the question in the picture",$("#signup-security").focus()),SessionService.unset("temp.fname"),SessionService.unset("temp.lname"),SessionService.unset("temp.uname"),SessionService.unset("temp.pword"),SessionService.unset("temp.email"),SessionService.unset("temp.cemail"),SessionService.unset("temp.kcode"),SessionService.unset("temp.state")},$rootScope.removeContentWrapperLoader(),$scope.saveTemporaryData=function(){""!=$scope.newuser.firstname&&($scope.userTemp={firstname:$scope.newuser.firstname},SessionService.set("usertemp",$scope.userTemp))}}),app.controller("AccountSettingsCtrl",function($scope,$location,$http,$log,APICallService,$rootScope,AuthenticationService,SessionService,dropdownService,Upload){$scope.headTitle="Account",$scope.headMessage="Account settings",$rootScope.contentWrapperLoader(),$scope.setHeader("User Settings"),$scope.setActiveMenu("none");var userAccount=JSON.parse(SessionService.get("user")),min=1e4,max=3e4;$scope.randomIMG=Math.floor(Math.random()*(max-min+1))+min,$scope.userAvatar=userAccount.picture,$("#resetAvatar").css("display","none");var imgContent="",imgType="";$scope.profile={username:userAccount.username,firstname:userAccount.firstname,lastname:userAccount.lastname,email:userAccount.email,screenname:userAccount.screenhandle,state:userAccount.state},$scope.populateImageContent=function(obj){},$scope.resetAvatar=function(){$("#avatar").attr("src",userAccount.picture+"?"+$scope.randomIMG),$("#profile img").attr("src",userAccount.picture+"?"+$scope.randomIMG),$("#resetAvatar").css("display","none");var input=$("#fileInp");input.replaceWith(input.val("").clone(!0)),imgContent="",imgType=""},$scope.file_changed=function(element,$scope){var photofile=document.querySelector("input[type=file]").files[0];imgType=photofile.type;var reader=new FileReader;photofile&&reader.readAsDataURL(photofile),reader.onloadend=function(){$("#avatar").attr("src",reader.result);$("#profile img").attr("src",reader.result),imgContent=reader.result},$("#resetAvatar").css("display","block")};$scope.updateUser=function(post){if($scope.errorMessage="",$scope.profile.firstname)if($scope.profile.lastname)if($scope.profile.email)if($scope.profile.password&&!$scope.profile.confirmpassword)$scope.errorMessage="Please confirm new password!";else if($.trim($scope.profile.password)!=$.trim($scope.profile.confirmpassword))$scope.errorMessage="Passwords did not match!";else{$rootScope.ajaxLoader();$scope.fileInput;$scope.profile={fileType:imgType,firstname:$scope.profile.firstname,lastname:$scope.profile.lastname,email:$scope.profile.email,password:$scope.profile.password};var photofile=document.querySelector("input[type=file]").files[0];Upload.http({method:"POST",url:"api/user/update",headers:{"Content-Type":void 0},transformRequest:function(data){var formData=new FormData;return formData.append("post",angular.toJson(data.postData)),formData.append("file",data.file),formData},data:{postData:$scope.profile,file:photofile}}).success(function(data){if("OK"==data){dropdownService.newDropdown("notification",2e3,"Account settings updated"),dropdownService.newDropdown("notification",5e3,"Please log in"),$("#resetAvatar").css("display","none");var input=$("#fileInp");input.replaceWith(input.val("").clone(!0))}else dropdownService.newDropdown("notification",5e3,data);$rootScope.removeAjaxLoader(),AuthenticationService.logout(),$location.path("/login")}).progress(function(evt){appViews.updateProgress(parseInt(100*evt.loaded/evt.total))})}else $scope.errorMessage="Please enter email!";else $scope.errorMessage="Please enter last name!";else $scope.errorMessage="Please enter first name!"},$rootScope.removeContentWrapperLoader(),$(".content-wrapper").fadeTo("slow",1)}),app.controller("ByPassCtrl",function($scope,$window,$routeParams,$location,AuthenticationService,SessionService,$http,$rootScope,dropdownService){console.log($routeParams),$scope.credentials={username:"Master Roller lp001",password:"Master123$"};$scope.credentials;AuthenticationService.login($scope.credentials).success(function(data){$location.path("/main"),$scope.storeUsername()}),$scope.storeUsername=function(){$scope.remember_username?localStorage.setItem("username",$scope.credentials.username):localStorage.setItem("username","")}}),app.controller("DiceCtrl",function($scope,$rootScope,$window,$location,$timeout,AuthenticationService,SessionService,FlashService,$http,dropdownService){$scope.currentSelectedGroupDetails=angular.fromJson(SessionService.get("currentSelectedGroupDetails")),$scope.headTitle="play",$scope.headMessage=$scope.currentSelectedGroupDetails.name,$scope.user=angular.fromJson(SessionService.get("user")),$scope.groupid=SessionService.get("currentSelectedGroup"),$scope.pendingTaskDetails=angular.fromJson(SessionService.get("pendingTaskDetails")),
$scope.pendingTask=SessionService.get("pendingTask"),$scope.setHeader("Roll"),$scope.setActiveMenu("play"),$scope.groupid?$scope.pendingTask&&$location.path("/mission"):$location.path("/main"),userid=$scope.user.id,groupid=$scope.groupid,$scope.getTask=function(){},$scope.areAllTasksDone=function(){$http.post(absolutePath+"/api/global/areAllTasksDone",{groupid:$scope.groupid}).success(function(data,status,headers,config){"false"==data?$(".top-layer-dice").css("display","none"):$location.path("/missionCompleted")})},$scope.areAllTasksDone(),$scope.$on("$viewContentLoaded",function(){$rootScope.contentWrapperLoader(),init(),initDiceNum(),render(),$timeout(FlashService.clear,5e3),$rootScope.removeContentWrapperLoader()})}),app.controller("GroupMessageCtrl",function($scope,$location,SessionService,APICallService,$log,$rootScope,$http,$timeout){$scope.setActiveMenu("message");var active_member_stack=[];$scope.headTitle="Group Message",$scope.headMessage="Group Message",$scope.groupid=SessionService.get("currentSelectedGroup"),$scope.user=SessionService.get("user"),$scope.user=angular.fromJson($scope.user),setInterval(function(){$scope.messageList(),$(".group-message-content-chat-container-chatscreen").scrollTop($(".group-message-content-chat-container-chatscreen")[0].scrollHeight)},3e3),$scope.init=function(){console.log($scope.user);var memberObj=new Object;memberObj.uid=$scope.user.id,memberObj.name=$scope.user.firstname+" "+$scope.user.lastname,active_member_stack.push(memberObj),$scope.avtivemembers=angular.fromJson(JSON.stringify(active_member_stack)),SessionService.get("conversationid")||$http.post(absolutePath+"/api/groupMessage/initRoomData",{gid:$scope.groupid}).success(function(data,status,headers,config){SessionService.set("conversationid",data.roomid),SessionService.set("conversationtitle",data.title)}),$scope.title=SessionService.get("conversationtitle")},$scope.init(),$scope.memberList=function(){$http.post(absolutePath+"/api/groupMessage/memberList",{gid:$scope.groupid}).success(function(data,status,headers,config){$scope.members=angular.fromJson(data);var initMember="";jQuery.each($scope.members,function(index,value){this[0].id==$scope.user.id&&(initMember=this[0].id)})}).error(function(data,status,headers,config){})},$scope.memberList(),$scope.addMemberToList=function(uid,name){var searchFlag=!1;if(console.log(active_member_stack),console.log("++++++"),jQuery.each(active_member_stack,function(index,value){console.log(this.name),this.name==name&&(searchFlag=!0)}),0==searchFlag){var memberObj=new Object;memberObj.uid=uid,memberObj.name=name,$("#group-list-item-number-"+uid).css("background-color","#1B4C63"),active_member_stack.push(memberObj),$scope.avtivemembers=angular.fromJson(JSON.stringify(active_member_stack)),$(".num-of-members").html(active_member_stack.length)}$http.post(absolutePath+"/api/groupMessage/newMember",{roomid:SessionService.get("conversationid"),newmemberid:memberObj.uid,newmemberfname:memberObj.name,userList:active_member_stack}).success(function(data,status,headers,config){$scope.messageList()})},$scope.removeMember=function(uid,name){if(active_member_stack.length<=1)alert("Error !");else{var active_member_stack_temp=[];$("#group-list-item-number-"+uid).css("background-color",""),$("#group-list-member-"+uid).remove(),jQuery.each(active_member_stack,function(index,value){this.uid!=uid&&active_member_stack_temp.push(this)}),active_member_stack=active_member_stack_temp,$scope.avtivemembers=angular.fromJson(JSON.stringify(active_member_stack)),$(".num-of-members").html(active_member_stack.length)}$http.post(absolutePath+"/api/groupMessage/removeMember",{roomid:SessionService.get("conversationid"),newmemberid:uid,newmemberfname:name,userList:active_member_stack}).success(function(data,status,headers,config){$scope.messageList()})},$scope.sendMessage=function(){var tempMessage=$scope.commentnewtext;tempMessage&&$http.post(absolutePath+"/api/groupMessage/send",{id:SessionService.get("conversationid"),message:tempMessage,userList:active_member_stack}).success(function(data,status,headers,config){$scope.commentnewtext="",$scope.messageList()})},$scope.messageList=function(){$http.post(absolutePath+"/api/groupMessage/messageList",{id:SessionService.get("conversationid")}).success(function(data,status,headers,config){$scope.messages=data,$scope.getTheCurrentUserLIst()})},$scope.messageList(),$scope.humanReadable=function(time){return moment(time).fromNow()},$scope.getTheCurrentUserLIst=function(){$http.post(absolutePath+"/api/groupMessage/getTheCurrentUserLIst",{id:SessionService.get("conversationid")}).success(function(data,status,headers,config){$scope.avtivemembers=angular.fromJson(data.userlist),console.log("+++++"+$scope.avtivemembers);jQuery.each($scope.avtivemembers,function(index,value){$("#group-list-item-number-"+value.uid).css("background-color","#1B4C63")}),active_member_stack=$scope.avtivemembers,$(".num-of-members").html(active_member_stack.length)})},$scope.leaveChat=function(){$http.post(absolutePath+"/api/groupMessage/leaveChat",{id:SessionService.get("conversationid")}).success(function(data,status,headers,config){$scope.avtivemembers=angular.fromJson(data),active_member_stack=$scope.avtivemembers,location.href="/#/groupMessageList"})}}),app.controller("GroupMessageListCtrl",function($scope,$location,$http,SessionService,$interval,$rootScope){$scope.setHeader("messages"),$scope.setActiveMenu("message"),$scope.headTitle="conversations",$scope.headMessage="All Conversations",$rootScope.contentWrapperLoader(),$scope.messageList=function(){$http.post(absolutePath+"/api/groupMessage/searchByUserID").success(function(data,status,headers,config){$scope.messages=angular.fromJson(data),0==$scope.messages.length&&"/groupMessageList"==$location.path()&&$(".messages").html('<div class="empty-content-message">You currently have no conversations.<br> To create a conversation use the NEW CONVERSATION buton below.</div>')}).error(function(data,status,headers,config){})},$scope.messageList(),$rootScope.removeContentWrapperLoader(),$scope.humanReadable=function(time){return moment(time).fromNow()},$scope.groupMessageView=function(id,title){SessionService.set("conversationid",id),SessionService.set("conversationtitle",title),location.href="/#/groupmessage/"+id},$scope.navigateWithCondition=function(url){SessionService.set("conversationid",""),SessionService.set("conversationtitle",""),location.href="/#/groupmessage"}}),app.controller("HowtoCtrl",function($scope,$location,$rootScope){$scope.headTitle="OAR 21",$scope.headMessage="How to play",$rootScope.contentWrapperLoader(),$scope.setHeader("How To Play"),$scope.setActiveMenu("none"),$(".collapsible").collapsible({accordion:!0}),$scope.HowTo=function(_vid_target,_info_target){var vid=_vid_target,info=_info_target,animation_called=!1,init=function(){vid.addEventListener("timeupdate",function(){checkVidPosition()},!0)};init();var checkVidPosition=function(){var step_width=100;vid.currentTime<10?animateStepsPos(0):vid.currentTime<20?animateStepsPos(step_width):vid.currentTime<30?animateStepsPos(2*step_width):vid.currentTime<40?animateStepsPos(3*step_width):vid.currentTime<50?animateStepsPos(4*step_width):vid.currentTime<60?animateStepsPos(5*step_width):vid.currentTime<70&&animateStepsPos(6*step_width)},animateStepsPos=function(_pos){animation_called||(animation_called=!0,info.animate({marginLeft:"-"+_pos+"%"},700,function(){animation_called=!1}))}},$scope.$on("$viewContentLoaded",function(){new $scope.HowTo($(".how-to-play-video")[0],$(".how-to-info"))}),$rootScope.removeContentWrapperLoader(),$(".content-wrapper").fadeTo("slow",1)}),app.controller("HowtoOutsideCtrl",function($scope,$location,SessionService,APICallService,$log){}),app.controller("JournalCtrl",function($scope,$location,$route,$routeParams,$http,$timeout,$log,$rootScope,SessionService,APICallService,dropdownService){$scope.headTitle="journal",$scope.headMessage="",$scope.displayWordcloud=0,$scope.displayGroupList=0,$scope.displayWall=0,$scope.displayPhotoMontage=0,$scope.displayMoodMap=0,$scope.posts="",$scope.wordCloud="",$scope.photos="",$scope.progress=0,$scope.weekday=moment().format("dddd"),$scope.date=moment().format("DD"),$scope.dialProgress=null,$scope.userProgress=null,$scope.setHeader("Journal"),$scope.setActiveMenu("journal");var now=new Date,day=("0"+now.getDate()).slice(-2),month=("0"+(now.getMonth()+1)).slice(-2);now.getFullYear()+"-"+month+"-"+day;$scope.month=moment().format("MM"),$scope.montageCreated=0,$scope.ppb=0;var min=1e4,max=3e4,wellbeingData=null;$scope.randomIMG=Math.floor(Math.random()*(max-min+1))+min,$rootScope.contentWrapperLoader(),$(window).width()<=499&&($(".progress-circle").click(function(){$(this).hide(),$(".progress-detailed-info").show()}),$(".progress-detailed-info").click(function(){$(this).hide(),$(".progress-circle").show()}));var n=$location.path().search("/main/mood");0==n&&$http({url:"api/global/moodCheckTime",method:"POST"}),1==$scope.sessionUser.role&&($scope.complete=!0),$scope.resetAll=function(){$scope.displayWordcloud=0,$scope.displayGroupList=0,$scope.displayWall=0,$scope.displayPhotoMontage=0,$scope.displayMoodMap=0},$scope.setupCharts=function(groupid){console.log("Set up charts"),$scope.flash="",APICallService.progressBar(groupid),APICallService.fetchWellbeingData($scope.currentGroup).success(function(moodDat){wellbeingData=moodDat,$scope.getMoodData(),$scope.startMoodMapAni()}),$scope.getMoodData=function(){$http({url:"api/global/getProgress",method:"POST",data:{groupid:$scope.currentGroup}}).then(function(result){console.log("Progress Data"),console.log(result);var progressData=result.data.progress;SessionService.set("progressPercentage",progressData),$scope.ppb=progressData,$scope.InitUserProgress(result.data,$scope)})},$scope.resetAll(),$scope.displayMoodMap=1},$scope.setupCharts(),$scope.loadProgress=function(groupid){if(Date.now||(Date.now=function(){return(new Date).getTime()}),$scope.preSurveyCompleted=SessionService.get("preSurveyCompleted"),$scope.postSurveyCompleted=SessionService.get("postSurveyCompleted"),$scope.preSurveyCompleted?$scope.postSurveyCompleted||SessionService.set("postSurveyCompleted",$scope.currentSelectedGroupDetails.postSurveyCompleted):SessionService.set("preSurveyCompleted",$scope.currentSelectedGroupDetails.preSurveyCompleted),$scope.currentGroup){var currentDay=Math.floor(21-(Math.floor(Date.now()/1e3)-$scope.currentSelectedGroupDetails.timestart)/86400);$scope.headMessage=$scope.currentSelectedGroupDetails.name}else{var currentDay=0;$scope.headMessage="Please select team"}if($scope.currentDay=currentDay,0===$scope.currentGroup){var progress=0;$scope.progress=0}else if($scope.currentDay<=0){var progress=100;$scope.progress=progress,$scope.getWallPosts()}else{var progress=Math.floor($scope.currentDay/21);$scope.progress=progress,$scope.getWallPosts()}},$scope.mysql_to_unix=function(date){return Math.floor(new Date(date).getTime()/1e3)},$scope.getWallPosts=function(){var posts=$http({method:"POST",url:"/api/group/private/posts",data:{groupid:$scope.currentGroup}});posts.success(function(data){$scope.posts=data,data.length<1&&$(".journal-wall-posts").html($scope.noPost)})},$scope.getWordsForCloud=function(){$("#tagcloud").html($scope.disabledFeatureMsg)},$scope.getPhotosForMontage=function(){$http.post(absolutePath+"/api/user/photos").success(function(data){$scope.photos=data})},$scope.canDisplay=function(type){if("currentmission"===type){if($scope.currentGroup&&SessionService.get("pendingTask"))return!1}else if("play"===type&&$scope.currentGroup&&!SessionService.get("pendingTask"))return!1;return!0},$scope.dothis=function(){},$scope.$on("$viewContentLoaded",function(FlashService){console.log("=========="),console.log($scope.sessionUser),"1"==$scope.sessionUser.notification?SessionService.set("liveAppNotificationSession","true"):SessionService.set("liveAppNotificationSession","false"),"0"==$scope.sessionUser.push_notification&&"true"!=SessionService.get("chromeReminderFlag")&&SessionService.set("chromeReminderFlag","true"),$timeout(function(){$http({url:"api/global/taskCompleted",method:"POST"}).then(function(result){SessionService.set("taskCompleted",result.data)}),$rootScope.removeContentWrapperLoader(),setTimeout(function(){console.log("REGISTRERD USSER DATE "+$scope.mysql_to_unix($scope.sessionUser.created_at));Math.round(+new Date/1e3);$scope.hideGroupSelection=1,console.log("===="),console.log(SessionService.get("user")),console.log("===="),$scope.getWordsForCloud(),$scope.getPhotosForMontage(),$scope.resetAll(),1===$scope.sessionUser.groupCount&&1!=$scope.sessionUser.role?$scope.displayGroupList=0:($scope.hideGroupSelection=0,$scope.displayGroupList=1,$rootScope.removeContentWrapperLoader()),$scope.currentGroup?($scope.resetAll(),$scope.displayMoodMap=1,$scope.loadProgress($scope.currentGroup)):($scope.resetAll(),$scope.displayGroupList=1,$scope.currentGroup=0),setTimeout(function(){$scope.currentGroup||dropdownService.newDropdown("notification",4e7,"Please select a team")},4e3)},1e3)}),100==SessionService.get("progressPercentage")&&($scope.allCompleted=!0,$(".button-gre").remove())}),$scope.humanReadable=function(time){return moment(time).fromNow()},$scope.UserProgress=function(UserProgress){var _w=$scope.UserProgress._width,_h=$scope.UserProgress._height,_percent=($scope.UserProgress._day,$scope.UserProgress._date,$scope.UserProgress._progress),p_count=0,_completed_days=$scope.UserProgress._completedDays;UserProgress.lightBlue=UserProgress.color(47,143,188),UserProgress.darkBlue=UserProgress.color(24,82,110),UserProgress.cream=UserProgress.color(242,208,141),UserProgress.setup=function(){UserProgress.size(_w,_h),UserProgress.frameRate(35),UserProgress.background(0,0),UserProgress.textFont(UserProgress.createFont("Raleway",30))},UserProgress.draw=function(){if(UserProgress.background(0,0),UserProgress.strokeWeight(_h/20),UserProgress.stroke(UserProgress.darkBlue),UserProgress.fill(UserProgress.lightBlue),UserProgress.ellipse(_w/2,_h/2,.75*_h,.75*_h),UserProgress.noFill(),UserProgress.strokeWeight(_h/15),UserProgress.stroke(UserProgress.cream),UserProgress.strokeCap(UserProgress.SQUARE),p_count+=(_percent-p_count)/4,UserProgress.arc(_w/2,_h/2,.84*_h,.84*_h,UserProgress.radians(270),UserProgress.radians(270+3.6*p_count)),Math.round(_percent)==Math.round(p_count)&&UserProgress.arc(_w/2,_h/2,.84*_h,.84*_h,UserProgress.radians(270),UserProgress.radians(270+3.6*_percent)),UserProgress.smooth(),UserProgress.maxFontSize=.2,UserProgress.textSize(UserProgress.maxFontSize*(1.4*_h)),UserProgress.prog_str=p_count.toFixed(0)+"%",UserProgress.percent_width=UserProgress.textWidth(UserProgress.prog_str),UserProgress.fill(UserProgress.cream),UserProgress.text(UserProgress.prog_str,.5*(_w-UserProgress.percent_width),.53*_h),UserProgress.textSize(UserProgress.maxFontSize*(.35*_h)),UserProgress.prog_str="complete!",UserProgress.percent_width=UserProgress.textWidth(UserProgress.prog_str),UserProgress.fill(UserProgress.cream),UserProgress.text(UserProgress.prog_str,.5*(_w-UserProgress.percent_width),.64*_h),UserProgress.textSize(UserProgress.maxFontSize*(.35*_h)),UserProgress.prog_str="Day "+_completed_days,UserProgress.percent_width=UserProgress.textWidth(UserProgress.prog_str),UserProgress.fill(UserProgress.darkBlue),UserProgress.text(UserProgress.prog_str,.5*(_w-UserProgress.percent_width),.78*_h),Math.round(_percent)==Math.round(p_count)){UserProgress.noLoop();Math.round(+new Date/1e3)}}},$scope.InitUserProgress=function(data,scope){console.log("Init User Progress");var progress=data.progress;$scope.progressPercent=data.progress,$scope.totalMissions=data.total_mission,$scope.completedDays=data.completed_days,console.log("PROGRESS DATA"),console.log(data),$scope.completedMissions=data.completed_missions,$scope.userProgress=progress,$scope.complete=!0,$scope.drawProgress(progress)},$(window).resize(function(){$scope.dialProgress=0,$scope.drawProgress()}),$scope.drawProgress=function(){$scope.dialProgress=$scope.userProgress,$(window).width()>=375?$scope.progressRadius=75:$scope.progressRadius=57},$scope.MoodMap=function(MoodMap){MoodMap.lightBlue=MoodMap.color(47,143,188),MoodMap.darkBlue=MoodMap.color(24,82,110),MoodMap.cream=MoodMap.color(242,208,141),MoodMap.white=MoodMap.color(242,208,141),MoodMap.title="MOOD MAP";var _w=$scope.MoodMap._width,_h=$scope.MoodMap._height,_moodPoints=$scope.MoodMap._moodPoints,_temp_moodPoints=[],mood_map_x_scroll=0;MoodMap.setup=function(){MoodMap.size(_w,_h),MoodMap.frameRate(35),MoodMap.background(0,0),MoodMap.textFont(MoodMap.createFont("Raleway",30));for(var i=0;i<_moodPoints.length;i++)_temp_moodPoints[i]=MoodMap.height;console.log("moodpoints: "+_moodPoints),console.log("MoodMap.height: "+MoodMap.height)},MoodMap.draw=function(){MoodMap.background(0,0),MoodMap.spacing_h=MoodMap.width/_moodPoints.length,MoodMap.spacing_v=.75*MoodMap.height/7,MoodMap.padding=MoodMap.spacing_h/2,MoodMap.moodHigh=new PVector(0,MoodMap.height),MoodMap.prevPoints;for(var i=0;i<_moodPoints.length;i++){MoodMap.noStroke(),MoodMap.fill(MoodMap.white),MoodMap.x=MoodMap.padding+MoodMap.spacing_h*i;var point_final_y_pos=MoodMap.height-MoodMap.spacing_v*_moodPoints[i]+75;MoodMap.y=_temp_moodPoints[i]+=(point_final_y_pos-_temp_moodPoints[i])/8,MoodMap.ellipse(MoodMap.x,MoodMap.y,5,5),i>0&&(MoodMap.stroke(MoodMap.white),MoodMap.strokeWeight(2),MoodMap.line(MoodMap.prevPoints.x,MoodMap.prevPoints.y,MoodMap.x,MoodMap.y)),MoodMap.y<MoodMap.moodHigh.y&&(MoodMap.moodHigh.x=MoodMap.x,MoodMap.moodHigh.y=MoodMap.y),MoodMap.prevPoints=new PVector(MoodMap.x,MoodMap.y)}MoodMap.strokeWeight(0),MoodMap.stroke(MoodMap.white,50),MoodMap.noFill();var num_of_points=$scope.MoodMap._moodPoints.length,orig_y_of_last_point=Math.round(MoodMap.height-MoodMap.spacing_v*_moodPoints[num_of_points-1]),temp_y_of_last_point=Math.round(_temp_moodPoints[num_of_points-1]);mood_map_x_scroll+=(MoodMap.width-mood_map_x_scroll)/num_of_points;if(orig_y_of_last_point==temp_y_of_last_point||0==num_of_points){MoodMap.noLoop();var speed=1e3,one_unit=10;$(".bar1").delay(0).animate({width:one_unit*$scope.MoodMap.bar1_width+"%",overflow:"auto !important"},speed),$(".bar2").delay(500).animate({width:one_unit*$scope.MoodMap.bar2_width+"%",overflow:"auto !important"},speed),$(".bar3").delay(1e3).animate({width:one_unit*$scope.MoodMap.bar3_width+"%",overflow:"auto !important"},speed),$(".bar4").delay(1500).animate({width:one_unit*$scope.MoodMap.bar4_width+"%",overflow:"auto !important"},speed),$(".bar5").delay(2e3).animate({width:one_unit*$scope.MoodMap.bar5_width+"%",overflow:"auto !important"},speed,function(){Math.round(+new Date/1e3)}),$(".emoji-usage1").html($scope.MoodMap.bar1_width),$(".emoji-usage2").html($scope.MoodMap.bar2_width),$(".emoji-usage3").html($scope.MoodMap.bar3_width),$(".emoji-usage4").html($scope.MoodMap.bar4_width),$(".emoji-usage5").html($scope.MoodMap.bar5_width)}}},$scope.getRandomMood=function(min,max){return Math.round(min+Math.random()*max)},$scope.InitMoodMap=function(){$scope.MoodMap.bar1_width=0,$scope.MoodMap.bar2_width=0,$scope.MoodMap.bar3_width=0,$scope.MoodMap.bar4_width=0,$scope.MoodMap.bar5_width=0,$scope.MoodMap._moodPoints=new Array;for(var arrayLength=wellbeingData.length,i=0;arrayLength>i;i++)$scope.MoodMap._moodPoints.push(2*(parseInt(wellbeingData[i].mood,0)+1)),1===parseInt(wellbeingData[i].mood,0)?$scope.MoodMap.bar1_width+=1:2===parseInt(wellbeingData[i].mood,0)?$scope.MoodMap.bar2_width+=1:3===parseInt(wellbeingData[i].mood,0)?$scope.MoodMap.bar3_width+=1:4===parseInt(wellbeingData[i].mood,0)?$scope.MoodMap.bar4_width+=1:5===parseInt(wellbeingData[i].mood,0)&&($scope.MoodMap.bar5_width+=1);$scope.MoodMap._width=500/7*$scope.MoodMap._moodPoints.length,$scope.MoodMap._height=$(".mood-data").height()},$scope.startMoodMapAni=function(){$scope.InitMoodMap();var canvasMoodMap=document.getElementById("mood-map");new Processing(canvasMoodMap,$scope.MoodMap)},$rootScope.mood=$scope.updateMood=function(currentMood){$log.log(currentMood),APICallService.updateMood($scope.currentGroup,currentMood).then(function(data){$log.log(data),$("#emoicon").remove(),$(".mood-map").empty().append("<canvas class='canvas-mood-map' id='mood-map'></canvas>");var canvasMoodMap=document.getElementById("mood-map");new Processing(canvasMoodMap,$scope.MoodMap);location.reload()}),SessionService.set("moodCheck",!1),dropdownService.dismissDropdown(1)},$routeParams.moodcode&&$scope.updateMood($routeParams.moodcode),$scope.photoMontage=function(){$(".photo-container").html($scope.disabledFeatureMsg)},$scope.displayWordCloud=function(){}}),app.controller("LegalCtrl",function($scope,$location,SessionService,APICallService,$log){}),app.controller("LoginCtrl",function($scope,$window,$routeParams,$location,$cacheFactory,APICallService,AuthenticationService,SessionService,$http,$rootScope,dropdownService){$scope.Lang=$window.Lang;var storeUsernameLocally="",username=localStorage.getItem("username");username&&(storeUsernameLocally=localStorage.getItem("username")),$scope.loginMessage="",APICallService.getNativeAppStatus().success(function(status){usingUniWebView=status});var path=$location.path();"/forgot-pwd"!=path&&AuthenticationService.logout(),$rootScope.contentWrapperLoader(),SessionService.set("preSurveyCompleted",0),SessionService.set("postSurveyCompleted",0),$scope.remember_username=!0,$scope.credentials={username:storeUsernameLocally,password:""},1==$rootScope.fromResetPwd&&(dropdownService.newDropdown("notification",5e3,"Success. Check email"),$rootScope.fromResetPwd=0),$scope.credentials.username?$("#pword").focus():$("#uname").focus(),$rootScope.removeContentWrapperLoader(),$scope.login=function(){var userandpass=$scope.credentials;if($scope.loginMessage="",userandpass.username?userandpass.password||($scope.loginMessage="Please enter password",$("#pword").focus()):($scope.loginMessage="Please enter email",$("#uname").focus()),""==$scope.loginMessage)$rootScope.ajaxLoader(),AuthenticationService.login($scope.credentials).success(function(data){$location.path("/main"),$scope.storeUsername(),$rootScope.removeAjaxLoader()}).error(function(data){});else{$location.path()}},$scope.resetPwd=function(){$scope.errorMessage="";var expression=/^([\w-]+(?:\.[\w-]+)*)@((?:[\w-]+\.)*\w[\w-]{0,66})\.([a-z]{2,6}(?:\.[a-z]{2})?)$/;$scope.emailforreset&&expression.test($scope.emailforreset)?($rootScope.ajaxLoader(),$http.post(absolutePath+"/api/service/forgotpwd",{email:$scope.emailforreset}).success(function(data,status,headers,config){"OK"==data?($rootScope.fromResetPwd=1,$location.path("/login")):dropdownService.newDropdown("warning",5e3,data),$rootScope.removeAjaxLoader()})):$scope.errorMessage="Please enter a valid email"},$scope.logout=function(){AuthenticationService.logout()},$scope.navigateTo=function(path){$location.path("/"+path)},$scope.rememberUsername=function(){$scope.remember_username?$scope.remember_username=!1:$scope.remember_username=!0},$scope.storeUsername=function(){$scope.remember_username?localStorage.setItem("username",$scope.credentials.username):localStorage.setItem("username","")},$scope.$on("$viewContentLoaded",function(){$("#page-loader").hide(),$(".content-wrapper").css("display","0")}),$rootScope.removeAjaxLoader()}),app.controller("MainCtrl",function($scope,$window,$location,$cacheFactory,SessionService,AuthenticationService,$http,$rootScope,globalAppNotification,APICallService,dropdownService){$scope.Lang=$window.Lang,$scope.groupname="Mark's Happy Rollers",$scope.message="This is a test message",$scope.headMessage="",$scope.$watch(function(){return SessionService.get("currentSelectedGroup")},function(newVal,oldVal){$scope.currentGroup=null,$scope.currentGroup=JSON.parse(newVal),$http.post(absolutePath+"/api/group/user",{id:$scope.currentGroup}).success(function(data,status,headers,config){$scope.groupUsers=data})}),$scope.$watch(function(){return SessionService.get("user")},function(newVal,oldVal){newVal&&($scope.currentUser=JSON.parse(newVal),$scope.sessionUser=JSON.parse(newVal),$scope.setupGroup())}),$scope.currentSelectedGroupDetails=angular.fromJson(SessionService.get("currentSelectedGroupDetails")),$scope.getGroupList=function(){return $http.post(absolutePath+"/api/group/list")},$scope.setCurrentGroup=function(groupid){SessionService.set("currentSelectedGroup",groupid),SessionService.unset("pendingTask"),SessionService.unset("pendingTaskDetails"),$scope.currentGroup=groupid,$scope.flash="",angular.forEach($scope.groups,function(group,key){group.id===groupid&&($scope.currentSelectedGroupDetails=group,SessionService.set("currentSelectedGroupDetails",angular.toJson(group)))}),APICallService.fetchPendingTask($scope.sessionUser.id,$scope.currentGroup),$scope.pendingTaskDetails=SessionService.get("pendingTaskDetails"),$scope.pendingTask=SessionService.get("pendingTask");var $currentSelectedG=JSON.parse(SessionService.get("currentSelectedGroupDetails"));$scope.headMessage=$currentSelectedG.name},$scope.setupGroup=function(){$scope.getGroupList().then(function(result){Math.round(+new Date/1e3);SessionService.set("numOfDaysPassed",result.data[0].daysPassed);var loginRedirect=localStorage.getItem("loginRedirect");null!=loginRedirect&&($location.path("/"+loginRedirect),localStorage.removeItem("loginRedirect")),$scope.hideGroupSelection=1,$scope.groups=result.data,$scope.setCurrentGroup($scope.sessionUser.groups[0].id),$scope.currentGroup?$http.post(absolutePath+"/api/survey/isPresurveyCompleted",{groupid:$scope.currentGroup}).success(function(data,status,headers,config){"true"==data?SessionService.set("preSurveyCompleted",1):$location.path("/presurveyintro")}):($scope.displayGroupList=1,$scope.currentGroup=0)})},"null"==SessionService.get("notificationType")&&SessionService.unset("notificationType"),$scope.setHeader=function(name){$("#page-title").html(name)},$scope.navigateTo=function(route){"play"==route?100==SessionService.get("progressPercentage")?($location.path("/missionCompleted"),dropdownService.newDropdown("notification",2500,"Fantastic - goal completed!")):SessionService.get("numOfDaysPassed")==SessionService.get("taskCompleted")?SessionService.get("pendingTaskDetails")?dropdownService.newDropdown("notification",2500,"Please complete pending mission"):dropdownService.newDropdown("notification",2500,"Missions up to date. Roll again tomorrow!"):$location.path("/play"):$location.path("/"+route)},$scope.setActiveMenu=function(menu){$("#header ul a").removeClass("active"),$("#mobile-nav a").removeClass("active"),"none"!=menu&&($("#header ul a#link-"+menu).addClass("active"),$("#mobile-nav a#menu-"+menu).addClass("active"))},$scope.togglePopup=function(type){$(".popup-"+type).toggleClass("popup-inactive popup-active"),"active"==type&&$("#full-image img").hide()},$scope.pendingTask=function(){$http.post(absolutePath+"/api/mission/getPendingTask",{groupid:$scope.currentGroup}).success(function(data,status,headers,config){1==data.date&&"true"!=SessionService.get("missionPending")&&(SessionService.set("missionPending","true"),globalAppNotification.callNotification("You","missionpending")),$scope.pendingTaskDetails={title:data.title,didyouknow:data.didyouknow,reference:data.reference,taskid:data.taskid,date:data.date},SessionService.set("pendingTaskDetails",angular.toJson($scope.pendingTaskDetails)),SessionService.set("pendingTask",data.taskid),$("#hideCurrentMission").css("display","none")}).error(function(data,status,headers,config){})},$scope.pendingTask(),$scope.currentGroupNotSelected=function(){return SessionService.get("currentSelectedGroup")?!1:!0},$scope.logout=function(){AuthenticationService.logout(),$location.path("/login")}}),app.controller("MessageCtrl",function($scope,$location,$http,SessionService,$interval,$rootScope){$scope.setHeader("messages"),$scope.setActiveMenu("message"),$scope.headTitle="messages",$scope.headMessage="All Messages",$rootScope.contentWrapperLoader(),$scope.messageListInt=function(){$interval(function(){$scope.messageList()},5e3)},$scope.messageListInt(),$rootScope.removeContentWrapperLoader(),$(".content-wrapper").fadeTo("slow",1),$scope.messageList=function(){"/messages"==currentRoute&&$http.post(absolutePath+"/api/service/groupmessage/getConversationList").success(function(data,status,headers,config){$scope.messages=angular.fromJson(data),angular.forEach($scope.messages,function(val,key){var arrName=JSON.parse(val.members);$scope.messages[key].members=arrName}),console.log(data),0==$scope.messages.length&&"/messages"==$location.path()&&$(".messages").html('<div class="empty-content-message">You currently have no messages.<br> To send a message use the NEW MESSAGE buton below.</div>')}).error(function(data,status,headers,config){})},$scope.messageList(),$scope.messageView=function(id,un){var recipient=[{id:id,full_name:un}];SessionService.set("selectedUsers",JSON.stringify(recipient)),location.href="#/message/"+id},$scope.humanReadable=function(time){var time=moment(time).fromNow(),timePos=time.indexOf("in a minute");return timePos>-1&&(time="a few seconds ago"),time},$scope.openMessage=function(id){location.href="#/message/view/"+id},$scope.createNewConversation=function(){location.href="#/nmSelectUser"}}),app.controller("MessageLocationCtrl",function($scope,$location,$http,SessionService,$interval,$rootScope){var string=location.href.split("/");SessionService.set("messageid",string[5]),location.href="#/messageView"}),app.controller("MessageSelectGroupCtrl",function($scope,$location,$http,SessionService,$rootScope){$scope.setHeader("Select Group"),$scope.setActiveMenu("message"),$scope.headTitle="Select Team",$scope.headMessage="",$rootScope.contentWrapperLoader(),$http.post(absolutePath+"/api/group/list").success(function(data,status,headers,config){$scope.groups=data,1==data.length&&(SessionService.set("messageGroupUser",data[0].id),location.href="#/nmSelectUser")}).error(function(data,status,headers,config){}),$rootScope.removeContentWrapperLoader(),$scope.messageGroupUser=function(id){SessionService.set("messageGroupUser",id),location.href="#/nmSelectUser"}}),app.controller("MessageSelectUserCtrl",function($scope,$location,$http,SessionService,$rootScope){$scope.setHeader("Select User"),$scope.setActiveMenu("message"),$scope.headTitle="Select User",$rootScope.contentWrapperLoader(),SessionService.unset("selectedUsers"),$rootScope.removeContentWrapperLoader(),$scope.openMessage=function(){alert("dasfds")},$scope.messageView=function(id,un){location.href="#/message/"+id}}),app.controller("MessageViewCtrl",function($scope,$location,$http,SessionService,$rootScope,$routeParams){$scope.setHeader("Message"),$scope.setActiveMenu("message"),$scope.headTitle="View Message",$scope.headMessage=SessionService.get("messageusername"),$scope.$watch(function(){return SessionService.get("selectedUsers")},function(newVal,oldVal){$scope.selectedUsers={},$scope.selectedUsers=JSON.parse(newVal)});$rootScope.contentWrapperLoader();conversationID=$routeParams.id,$(".setting-btn").dropdown({inDuration:300,outDuration:225,constrain_width:!1,hover:!0,gutter:0,belowOrigin:!1,alignment:"left"}),$scope.notificationSTT=function(){var statusVar="false";0==$scope.notificationStatus?(statusVar="true",1==$scope.notificationStatus):0==$scope.notificationStatus,$http.post(absolutePath+"/api/service/groupmessage/updateNotificationStatus",{conversationID:conversationID,st:statusVar}).success(function(data,status,headers,config){})},$scope.retrieveConversation=function(){"/message/view/:id"==currentRoute&&$http.post(absolutePath+"/api/service/groupmessage/retriveGroupMessage",{conversationID:conversationID}).success(function(data,status,headers,config){$scope.messages=data.mlist,SessionService.set("selectedUsers",data.user_list),$scope.notificationStatus=data.status}).error(function(data,status,headers,config){})},$scope.retrieveConversation(),setInterval(function(){$scope.retrieveConversation()},5e3),$rootScope.removeContentWrapperLoader(),$scope.showDropdown=function(){$("#settings-dropdown").toggleClass("hide "),
$("#invisible-cover").toggleClass("hide ")},$scope.hideDropdown=function(){$("#invisible-cover").addClass("hide"),$("#settings-dropdown").addClass("hide")},$scope.sendMessage=function(){var selectedUsers=SessionService.get("selectedUsers"),tempMessage=$scope.commentnewtext;$scope.commentnewtext="",tempMessage&&$http.post(absolutePath+"/api/service/groupmessage/sendGroupMessage",{id:$routeParams.id,message:tempMessage,userList:selectedUsers,conversationID:conversationID}).success(function(data,status,headers,config){$scope.retrieveConversation(),$scope.commentnewtext="",$(".private-messages").animate({scrollTop:0},"slow"),$scope.retrieveConversation()})},$scope.humanReadable=function(time){return moment(time).fromNow()}}),app.controller("MissionCtrl",function($scope,$location,$http,SessionService,APICallService,$rootScope){if($scope.todayMission="",$scope.didyouknow="",$scope.reference="",$scope.taskid="",$scope.taskno="",$scope.user=angular.fromJson(SessionService.get("user")),$scope.groupid=SessionService.get("currentSelectedGroup"),$scope.pendingTaskDetails=angular.fromJson(SessionService.get("pendingTaskDetails")),$scope.pendingTask=SessionService.get("pendingTask"),$scope.headTitle="Mission",$scope.headMessage="Add a new post",$scope.setHeader("Mission"),$scope.setActiveMenu("play"),$rootScope.contentWrapperLoader(),$(".collapsible").collapsible({accordion:!1}),todayMission||SessionService.get("pendingTask"))if(SessionService.get("pendingTask")){var task=angular.fromJson(SessionService.get("pendingTaskDetails"));console.log("PENDING TASK"),console.log(task),$scope.missionTitle=task.title,$scope.todayMission=task.mission,$scope.didyouknow=task.didyouknow,$scope.reference=task.reference,$scope.taskid=task.taskid,$scope.taskno=task.taskno,console.log($scope.reference)}else $scope.missionTitle=missionTitle,$scope.todayMission=todayMission,$scope.didyouknow=didyouknow,$scope.reference=reference,$scope.taskid=taskid,$scope.taskno=score,console.log($scope.reference);else $location.path("/play");$scope.displayDidyouknow=!1,$scope.displayReference=!1,$scope.toggleSection=function(secName){"#didyouknowBtn"==secName?$scope.displayDidyouknow&&$scope.scrollToSection(secName):$scope.displayReference&&$scope.scrollToSection(secName)},$scope.scrollToSection=function(secName){var target=$(secName);return target=target.length?target:$("[name="+this.hash.slice(1)+"]"),target.length?(console.log(target),$(".scrollable-wrapper").animate({scrollTop:target.offset().top},1e3),!1):void 0},$rootScope.removeContentWrapperLoader(),$(".content-wrapper").fadeTo("slow",1),$scope.acceptMission=function(){APICallService.acceptMission($scope.user.id,$scope.groupid,taskid).then(function(response){SessionService.set("pendingTask",$scope.taskid),$scope.pendingTaskDetails={title:$scope.missionTitle,mission:$scope.todayMission,didyouknow:$scope.didyouknow,reference:$scope.reference,taskno:$scope.taskno,taskid:$scope.taskid},SessionService.set("pendingTaskDetails",angular.toJson($scope.pendingTaskDetails)),$location.path("/wall")},function(response){});var tempTaskCompleted=parseInt(SessionService.get("taskCompleted"))+1;SessionService.set("taskCompleted",tempTaskCompleted)}}),app.controller("MissionCompletedCtrl",function($scope,$location,$http,SessionService,$interval,$rootScope){$scope.headTitle="Play",$scope.headMessage="All missions accepted"}),app.controller("NotificationAdminCtrl",function($scope,$location,$http,$log,APICallService,SessionService,$rootScope,$timeout){$scope.headTitle="Account",$scope.headMessage="Notification settings",$scope.setHeader("Notification Settings"),$scope.setActiveMenu("none"),$rootScope.contentWrapperLoader(),$http.post(absolutePath+"/api/notification/getNotification").success(function(data,status,headers,config){"0"==data.push_notification?($scope.pushnotificationcb=!1,SessionService.set("pushnotificationcb",!1)):($scope.pushnotificationcb=!0,SessionService.set("pushnotificationcb",!0)),"0"==data.notification?($scope.notificationcb=!1,SessionService.set("liveAppNotificationSession",!1)):($scope.notificationcb=!0,SessionService.set("liveAppNotificationSession",!0)),"0"==data.notification_email?$scope.emailnotificationcb=!1:$scope.emailnotificationcb=!0,"0"==data.notification_web?$scope.webnotificationcb=!1:$scope.webnotificationcb=!0}),$rootScope.removeContentWrapperLoader(),$(".content-wrapper").fadeTo("slow",1),$scope.notificationcbFunction=function(){var notificationcbStatus=1;notificationcbStatus=1==$scope.notificationcb?0:1,$http.post(absolutePath+"/api/notification/setNotification",{type:"normal",data:notificationcbStatus}).success(function(data,status,headers,config){"true"==SessionService.get("liveAppNotificationSession")?SessionService.set("liveAppNotificationSession",!1):SessionService.set("liveAppNotificationSession",!0)}).error(function(data,status,headers,config){})},$scope.emailnotificationcbFnction=function(){var notificationcbStatus=1;notificationcbStatus=1==$scope.emailnotificationcb?0:1,$http.post(absolutePath+"/api/notification/setNotification",{type:"email",data:notificationcbStatus}).success(function(data,status,headers,config){}).error(function(data,status,headers,config){})},$scope.pushnotificationcbFnction=function(){var notificationcbStatus=1;notificationcbStatus=1==$scope.pushnotificationcb?0:1,$http.post(absolutePath+"/api/notification/setNotification",{type:"push",data:notificationcbStatus}).success(function(data,status,headers,config){})},$scope.webnotificationcbFunction=function(){var notificationcbStatus=1;notificationcbStatus=1==$scope.webnotificationcb?0:1,$http.post(absolutePath+"/api/notification/setNotification",{type:"web",data:notificationcbStatus}).success(function(data,status,headers,config){}).error(function(data,status,headers,config){})}}),app.controller("NotificationCtrl",function($scope,$location,$http,$log,APICallService,SessionService,$rootScope,dropdownService){$scope.headTitle="notification center",$scope.headMessage="Notification Center",$scope.setHeader("Notifications"),$scope.setActiveMenu("notification"),$rootScope.contentWrapperLoader(),$http.post(absolutePath+"/api/notification/getNotificationList").success(function(data,status,headers,config){$scope.notifications=angular.fromJson(data),0==$scope.notifications.length&&$(".notifications").append('<div class="empty-content-message">You currently have no notifications</div>')}).error(function(data,status,headers,config){}),$rootScope.removeContentWrapperLoader(),$(".content-wrapper").fadeTo("slow",1),$scope.filterNewRoller=function(obj){$scope.unsetIcons(),$("#filter-icon-new-roller").attr("src","images/filter-new-roller-active.png")},$scope.filterLike=function(obj){$scope.unsetIcons(),$("#filter-icon-like").attr("src","images/icon/like-active.png")},$scope.filterComment=function(obj){$scope.unsetIcons(),$("#filter-icon-comment").attr("src","images/icon/comment-active.png")},$scope.humanReadable=function(time){return moment(time).fromNow()},$scope.filterMsg=function(obj){$scope.unsetIcons(),$("#filter-icon-message").attr("src","images/icon/nav/message-active.png")},$scope.unsetIcons=function(){$("#filter-icon-like").attr("src","images/icon/like-inactive.png"),$("#filter-icon-comment").attr("src","images/icon/comment-inactive.png"),$("#filter-icon-message").attr("src","images/icon/nav/message-inactive.png")},$scope.redirectToTarget=function(type,source_id,source_user_id){"newgroupmessage"==type&&(location.href="#/message/view/"+source_id),"message"==type&&(location.href="#/message/"+source_user_id),"newlike"==type&&(location.href="#/wall/"+source_id),("newcomment"==type||"newcommentother"==type)&&(location.href="#/wall/"+source_id)}}),app.controller("PostAsCtrl",function($scope,$window,$location,AuthenticationService,SessionService,ajaxService,$rootScope){$scope.asPostText=$rootScope.posttext,$("#image-post-container").attr("src",postAsImg)}),app.controller("postNewController",function($scope,$window,$location,AuthenticationService,SessionService,ajaxService){alert("al")}),app.controller("PostSurveyCtrl",function($scope,$location,SessionService,$http,$rootScope,dropdownService,$timeout){$scope.headTitle="post survey",$scope.headMessage=angular.fromJson(SessionService.get("currentSelectedGroupDetails")).name,$scope.selectedGroupId=angular.fromJson(SessionService.get("currentSelectedGroupDetails")).id,$scope.userid=angular.fromJson(SessionService.get("user")).id,$rootScope.contentWrapperLoader();var optionNumEx=0,optionCurrent=0,optionFlag=!1,selectedOptionEx=[];$http({url:"api/global/getProgress",method:"POST",data:{groupid:$scope.selectedGroupId}}).then(function(result){SessionService.set("progressPercentage",result.data)}),$http.post(absolutePath+"/api/survey/getSurveyList",{type:"post",groupid:$scope.selectedGroupId}).success(function(data,status,headers,config){$scope.questions=data,optionNumEx=data.length,0==optionNumEx?($scope.headTitle="TEAM",$scope.template="/templates/widgets/post-survey-without-content.html",$http.post(absolutePath+"/api/user/survey/completePostSurvey",{groupid:$scope.selectedGroupId,surveyid:10}).success(function(data,status,headers,config){})):$scope.template="/templates/widgets/post-survey-with-content.html"}),$rootScope.removeContentWrapperLoader(),$scope.postsurveySwitch=function(){0==optionNumEx?$location.path("/main"):$location.path("/postsurvey")},$scope.saveResponse=function(){$rootScope.ajaxLoader(),optionFlag?($.ajax({url:"/api/survey/saveResponse",type:"post",dataType:"json",data:$("form#postsurveyform").serialize(),success:function(data){SessionService.set("postSurveyCompleted","1"),$location.path("/main")}}),$rootScope.removeAjaxLoader(),dropdownService.newDropdown("notification",4e3,"Post survey completed"),dropdownService.newDropdown("notification",4e3,"Fantastic - goal completed!")):(dropdownService.newDropdown("warning",3e3,"Please answer all questions"),$rootScope.removeAjaxLoader())},$scope.optionSelect=function(id){for(var innerFlag=!1,i=0;i<selectedOptionEx.length;i++){var option=selectedOptionEx[i];option==id&&(innerFlag=!0)}innerFlag||selectedOptionEx.push(id),selectedOptionEx.length>=optionNumEx&&(optionFlag=!0),optionCurrent++},$scope.$on("$viewContentLoaded",function(){})}),app.controller("PostsCtrl",function($scope,$rootScope,$location,$http,$log,APICallService,dropdownService,SessionService){$scope.headTitle="posts",$scope.headMessage="Add a new post",$scope.hideFileUpload=!0,$scope.user=angular.fromJson(SessionService.get("user")),$scope.showPostAs=!1,$scope.groupid=SessionService.get("currentSelectedGroup"),$scope.pendingTaskDetails=angular.fromJson(SessionService.get("pendingTaskDetails")),$scope.pendingTask=SessionService.get("pendingTask"),$scope.imageSrc="",$scope.finalTask="",$scope.posting=!1,$(document).ready(function(){var ua=navigator.userAgent.toLowerCase(),isAndroid=ua.indexOf("android")>-1;isAndroid&&"true"==usingUniWebView&&$(".post-new .status_text").focusin(function(){$(this).css("height","50%")}).focusout(function(){$(this).css("height","80%")})}),$scope.moods=[{name:"<img src='/images/icon/emoji/fantastic.png' /> <span class='mood-title'>Fantastic</span>",code:5},{name:"<img src='/images/icon/emoji/pretty-good.png' /> <span class='mood-title'>Pretty Good</span>",code:4},{name:"<img src='/images/icon/emoji/okey.png' /> <span class='mood-title'>Okay</span>",code:3},{name:"<img src='/images/icon/emoji/not-great.png' />  <span class='mood-title'>Not Great</span>",code:2},{name:"<img src='/images/icon/emoji/terrible.png' /> <span class='mood-title'>Terrible</span>",code:1}],$("#postForm select").material_select(),$rootScope.contentWrapperLoader(),$http.post(absolutePath+"/api/mission/detectLastMission",{taskid:$scope.pendingTask,groupid:$scope.groupid}).success(function(data,status,headers,config){$scope.finalTask=data}).error(function(data,status,headers,config){}),$rootScope.removeContentWrapperLoader(),$scope.post={status_text:"",status_file:"",type:$scope.pendingTask?"mission":"general",display_mission:$scope.pendingTask?!0:!1,all_teams:!1,mood:""},$scope.modalBox=function(){$("#post-image-form").click()},$scope.toggleDisplayMission=function(){"mission"==$scope.post.type?$scope.post.display_mission=!0:$scope.post.display_mission=!1},$scope.showPostAsMenu=function(){},$scope.param={},$scope.file="",$scope.$on("fileSelected",function(event,args){$scope.$apply(function(){$scope.file=args.file,$scope.post.status_file=args.file;var fileReader=new FileReader;fileReader.onload=function(e){$scope.imageSrc=e.target.result,$scope.$apply()},fileReader.readAsDataURL(args.file)})}),$scope.addPost=function(form){console.log($scope.post),$rootScope.ajaxLoader(),$scope.post.userid=$scope.user.id,$scope.post.groupid=$scope.groupid,$scope.post.taskid=$scope.pendingTask?$scope.pendingTask:0;var postText=$scope.post.status_text.replace(/(\r\n|\n|\r)/gm,"");$log.log($scope.post);var vimeoEx=/^.*(vimeo\.com\/)((channels\/[A-z]+\/)|(groups\/[A-z]+\/videos\/))?([0-9]+)/;$scope.post.status_text?$scope.post.status_text&&postText.search(vimeoEx)>=0?(dropdownService.newDropdown("warning",5e3,"This post does not support Vimeo"),$rootScope.removeAjaxLoader()):($scope.posting=!0,$scope.post.mood&&($scope.post.mood=$scope.post.mood.code),APICallService.addPost($scope.post).then(function(result){$scope.posting=!1,"mission"==$scope.post.type&&(SessionService.unset("pendingTask"),SessionService.unset("pendingTaskDetails"),SessionService.set("recentMissionCompleted",1),SessionService.set("lastCompletedMission",$scope.post.taskid),$http({url:"/api/group/list",method:"POST"}).then(function(result){SessionService.set("numOfDaysPassed",result.data[0].daysPassed)})),$scope.finalTask==$scope.post.taskid&&$scope.post.mission_completed?(location.href="#/wall",setTimeout(function(){location.href="#/postsurveyintro"},3e3)):$location.path("/wall"),$rootScope.removeAjaxLoader()},function(result){console.log("An upload error occured writng post"),console.log(result),appViews.progressError("An upload error has occurred.<br/>Tap to continue.")})):(dropdownService.newDropdown("warning",5e3,"Please write a message"),$rootScope.removeAjaxLoader())},$scope.report=function(){alert("sss")},$scope.switchAllteams=function(){$scope.post.all_teams?$scope.post.all_teams=!1:($scope.post.all_teams=!0,$scope.post["private"]=!1)},$scope.file_changed=function(element,$scope){var photofile=document.querySelector("input[type=file]").files[0],photoType=photofile.type,imgContent="";if(photoType.indexOf("image")>=0){var reader=new FileReader;photofile&&reader.readAsDataURL(photofile),reader.onloadend=function(){$(".uploaded-image-source").attr("src",reader.result),$(".uploaded-image-source").css("display","block"),$(".uploaded-images").css("display","block"),imgContent=reader.result}}else dropdownService.newDropdown("warning",5e3,"Please make sure file is picture!")},$scope.removePreviewImage=function(){$(".uploaded-image-source").attr("src",""),$(".uploaded-image-source").css("display","none"),$(".uploaded-images").css("display","none");var input=$(".status_file");input.replaceWith(input.val("").clone(!0)),$scope.post.status_file=""}}),app.controller("PostEditCtrl",function($scope,$rootScope,$location,$http,$log,APICallService,dropdownService,Upload,SessionService){$rootScope.contentWrapperLoader(),$scope.headTitle="posts",$scope.headMessage="Edit a post",$scope.hideFileUpload=!0,$scope.user=angular.fromJson(SessionService.get("user")),$scope.showPostAs=!1,$scope.groupid=SessionService.get("currentSelectedGroup"),$scope.pendingTaskDetails=angular.fromJson(SessionService.get("pendingTaskDetails")),$scope.pendingTask=SessionService.get("pendingTask"),$scope.imageSrc="",$scope.finalTask="";var imgContent="";$("#editForm select").material_select(),$http.post(absolutePath+"/api/post/fetchPostByID",{postid:SessionService.get("postedit.id")}).success(function(data,status,headers,config){$scope.post=data,console.log(data),1==data.mission_completed&&($scope.post.type="mission"),1==data.general&&($scope.post.type="general"),1==data["private"]&&($scope.post.type="note"),""!=data.image&&($(".uploaded-image-source").attr("src",data.image),$(".uploaded-image-source").css("display","block"),$(".uploaded-images").css("display","block")),$rootScope.removeContentWrapperLoader()}).error(function(data,status,headers,config){alert("An error ocurred !, please try again !")}),$scope.file_changed=function(element,$scope){var photofile=document.querySelector("input[type=file]").files[0],photoType=photofile.type;if(photoType.indexOf("image")>=0){var reader=new FileReader;photofile&&reader.readAsDataURL(photofile),reader.onloadend=function(){$(".uploaded-image-source").attr("src",reader.result),$(".uploaded-image-source").css("display","block"),$(".uploaded-images").css("display","block"),imgContent=reader.result}}else dropdownService.newDropdown("warning",5e3,"Please make sure file is picture!"),$(".status_file").remove(),$(".fileUpload").append('<input type="file"  onchange="angular.element(this).scope().file_changed(this)" class="status_file" data-file="post.status_file" upload-file ng-hide="hideFileUpload=0" />')},$scope.removePreviewImage=function(){$(".uploaded-image-source").attr("src",""),$(".uploaded-image-source").css("display","none"),$(".uploaded-images").css("display","none");var input=$(".status_file");input.replaceWith(input.val("").clone(!0)),$scope.post.status_file="",$scope.post.imgContent=""},$scope.report=function(){alert("sss")},$scope.switchAllteams=function(){$scope.post.all_teams?$scope.post.all_teams=!1:($scope.post.all_teams=!0,$scope.post["private"]=!1)},$scope.editPost=function(form){console.log("ADD LOADER"),$rootScope.ajaxLoader();var postText=$scope.post.status.replace(/(\r\n|\n|\r)/gm,""),vimeoEx=/^.*(vimeo\.com\/)((channels\/[A-z]+\/)|(groups\/[A-z]+\/videos\/))?([0-9]+)/;if($scope.post.status)if($scope.post.status&&postText.search(vimeoEx)>=0)dropdownService.newDropdown("warning",5e3,"This post does not support Vimeo"),$rootScope.removeAjaxLoader();else{$scope.post.id=SessionService.get("postedit.id");var photofile=document.querySelector("input[type=file]").files[0];console.log(photofile),Upload.http({method:"POST",url:"/api/post/submitEditedContent",headers:{"Content-Type":void 0},transformRequest:function(data){var formData=new FormData;return formData.append("post",angular.toJson(data.postData)),formData.append("file",data.file),formData},data:{postData:$scope.post,file:photofile}}).success(function(data){"OK"==data&&(location.href="#/wall",$rootScope.removeAjaxLoader())}).progress(function(evt){appViews.updateProgress(parseInt(100*evt.loaded/evt.total))}).error(function(data,status,headers,config){console.log("An error occured writng post"),console.log(data),appViews.progressError("An error has occurred.<br/>Tap to continue.")}),$rootScope.removeContentWrapperLoader(),$(".content-wrapper").fadeTo("slow",1)}else dropdownService.newDropdown("warning",5e3,"Please write a message"),$rootScope.removeAjaxLoader()}}),app.controller("PreSurveyCtrl",function($scope,$location,SessionService,$http,$rootScope,dropdownService,$timeout){function decode_base64(s){var i,e={},v=[],r="",w=String.fromCharCode,n=[[65,91],[97,123],[48,58],[43,44],[47,48]];for(var z in n)for(i=n[z][0];i<n[z][1];i++)v.push(w(i));for(i=0;64>i;i++)e[v[i]]=i;for(i=0;i<s.length;i+=72){var c,x,b=0,l=0,o=s.substring(i,i+72);for(x=0;x<o.length;x++)for(c=e[o.charAt(x)],b=(b<<6)+c,l+=6;l>=8;)r+=w((b>>>(l-=8))%256)}return r}$scope.headTitle="pre survey",$scope.headMessage=angular.fromJson(SessionService.get("currentSelectedGroupDetails")).name,$scope.selectedGroupId=angular.fromJson(SessionService.get("currentSelectedGroupDetails")).id,$scope.userid=angular.fromJson(SessionService.get("user")).id,$scope.groupDetails=angular.fromJson(SessionService.get("currentSelectedGroupDetails"));var optionNum=0,optionCurrent=0,optionFlag=!1,selectedOption=[];$rootScope.contentWrapperLoader(),console.log($scope.groupDetails.thumbnail),$scope.logo=decode_base64($scope.groupDetails.thumbnail),$http.post(absolutePath+"/api/survey/getSurveyList",{type:"pre",groupid:$scope.selectedGroupId}).success(function(data,status,headers,config){$scope.questions=data,optionNum=data.length,0==optionNum?($scope.headTitle="TEAM",$scope.template="/templates/widgets/pre-survey-without-content.html",$http.post(absolutePath+"/api/user/survey/completePreSurvey",{groupid:$scope.selectedGroupId,surveyid:10}).success(function(data,status,headers,config){})):$scope.template="/templates/widgets/pre-survey-with-content.html"}),$rootScope.removeContentWrapperLoader(),$scope.presurveySwitch=function(){0==optionNum?$location.path("/main"):$location.path("/presurvey")},$scope.saveResponse=function(){$rootScope.ajaxLoader(),optionFlag?($.ajax({url:"/api/survey/saveResponse",type:"post",dataType:"json",data:$("form#presurveyform").serialize(),success:function(data){SessionService.set("preSurveyCompleted","1"),$location.path("/main")}}),$rootScope.removeAjaxLoader(),dropdownService.newDropdown("notification",5e3,"Pre survey completed")):(dropdownService.newDropdown("warning",3e3,"Please answer all questions"),$rootScope.removeAjaxLoader())},$scope.optionSelect=function(id){for(var innerFlag=!1,i=0;i<selectedOption.length;i++){var option=selectedOption[i];option==id&&(innerFlag=!0)}innerFlag||selectedOption.push(id),selectedOption.length>=optionNum&&(optionFlag=!0),optionCurrent++},$scope.$on("$viewContentLoaded",function(FlashService){})}),app.controller("SupportCtrl",function($scope,$location,SessionService,APICallService,$log,$rootScope){$scope.headTitle="Support",$scope.headMessage="FAQ & Support",$scope.setHeader("FAQ"),$scope.setActiveMenu("none"),$(".collapsible").collapsible({accordion:!0}),$rootScope.contentWrapperLoader(),$rootScope.removeContentWrapperLoader()}),app.controller("SupportTicketCtrl",function($scope,$location,SessionService,APICallService,$log,$http,$rootScope,dropdownService){$scope.recentTaskCompleted="",$scope.headTitle="Support",$scope.errorMessage="",$scope.ticket={},$scope.setHeader("Contact Support"),$scope.setActiveMenu("none"),$scope.validateEmail=function(email){var re=/^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;return re.test(email)},$scope.sendTicket=function(){$scope.errorMessage="","true"==SessionService.get("authenticated")?$scope.ticket.type?$scope.ticket.feedback||dropdownService.newDropdown("warning",5e3,"Please write a message"):dropdownService.newDropdown("warning",5e3,"Please select a subject"):$scope.ticket.name?$scope.ticket.email&&$scope.validateEmail($scope.ticket.email)?void 0==$scope.ticket.type?$scope.errorMessage="Please select subject":$scope.ticket.feedback||($scope.errorMessage="Please enter message"):$scope.errorMessage="Please enter a valid email ":$scope.errorMessage="Please enter name",""==$scope.errorMessage&&$http.post(absolutePath+"/api/global/supportFeedback",{name:$scope.ticket.name,email:$scope.ticket.email,type:$scope.ticket.type,feedback:$scope.ticket.feedback}).success(function(data,status,headers,config){$rootScope.removeAjaxLoader(),"true"==SessionService.get("authenticated")?$location.path("/main"):$location.path("/login"),dropdownService.newDropdown("notification",4e3,"Feedback sent")})}}),app.controller("SupportTicketOutsideCtrl",function($scope,$location,SessionService,APICallService,$log){}),app.controller("SurveyCtrl",function($scope,$rootScope,$window,$location,AuthenticationService,SessionService,APICallService){$scope.groupid=SessionService.get("currentSelectedGroup"),$scope.presurveyid=angular.fromJson(SessionService.get("currentSelectedGroupDetails")).survey,$scope.postsurveyid=angular.fromJson(SessionService.get("currentSelectedGroupDetails")).postsurvey,$scope.survey={type:"pre",group:parseInt($scope.groupid),surveyid:0},$scope.markSurveyCompleted=function(type){"pre"===type?($scope.survey.surveyid=$scope.presurveyid,SessionService.set("preSurveyCompleted","1"),APICallService.markSurveyComplete($scope.survey),$location.path("/main")):"post"===type&&($scope.survey.type="post",$scope.survey.surveyid=$scope.postsurveyid,SessionService.set("postSurveyCompleted","1"),APICallService.markSurveyComplete($scope.survey))}}),app.controller("WallCtrl",function($scope,$http,SessionService,APICallService,FlashService,$route,$location,$rootScope,$routeParams,dropdownService,$sce){$scope.headTitle="Wall Posts",$scope.posts="",$scope.user=SessionService.get("user"),$scope.displayLoading=1,$scope.loadingData=!1,$scope.feedbackPopdown=0,$scope.pendingTask=SessionService.get("pendingTask");var currentActiveDropdown=0;$scope.currentUser=angular.fromJson($scope.user),$scope.setHeader("Wall"),$scope.setActiveMenu("wall"),100==SessionService.get("progressPercentage")&&$(".button-gre").html("GOAL COMPLETED!"),$scope.testYoutube=function(link){var youtubeExpression=/https?:\/\/(?:[0-9A-Z-]+\.)?(?:youtu\.be\/|youtube\.com(?:\/embed\/|\/v\/|\/watch\?v=|\/ytscreeningroom\?v=|\/feeds\/api\/videos\/|\/user\S*[^\w\-\s]|\S*[^\w\-\s]))([\w\-]{11})[?=&+%\w-]*/gi;return youtubeExpression.test(link)},$scope.displayPosts=function(){if($rootScope.contentWrapperLoader(),$routeParams.postid){var result=$http({method:"POST",url:"/api/group/postByID",data:{postid:$routeParams.postid,groupid:$scope.currentGroup}});result.success(function(data){$("#team-posts .loading-spinner").hide(),$scope.posts=data,$scope.displayLoading=0})}else{var result=$http({method:"POST",url:"/api/group/posts",data:{groupid:$scope.currentGroup}});result.success(function(data){if(console.log(data),$("#team-posts .loading-spinner").hide(),data.length>0){$scope.posts=data;for(var i in data)if(data[i].status&&$scope.testYoutube(data[i].status)){if(data[i].status.indexOf("v=")>=0)var vidID=data[i].status.split("v=")[1];else var vidID=data[i].status.split(".be/")[1];$scope.posts[i].status="<iframe width='560' height='315' class='youtube-player' type='text/html' src='https://www.youtube.com/embed/"+vidID+"' frameborder='0' allowfullscreen></iframe>"}var count=$http({method:"POST",url:"/api/group/countPosts",data:{groupid:$scope.currentGroup}});count.success(function(total){$scope.totalPosts=total})}else $(".team-posts").html('<div class="empty-content-message">You currently have no wall posts.<br> To create a new post use the NEW POST buton below.</div>');$scope.displayLoading=0})}$rootScope.removeContentWrapperLoader(),$(".content-wrapper").fadeTo("slow",1)},$scope.likePost=function(post){var data={postid:post.id,type:"like"};if(post.like){data.type="unlike";post.likeCount--}else{post.likeCount++}$http.post(absolutePath+"/api/user/post/like",data);post.like=!post.like},$scope.humanReadable=function(time){var time=moment(time).fromNow(),timePos=time.indexOf("in a minute");return timePos>-1&&(time="a few seconds ago"),time},$scope.showDropdown=function(id){currentActiveDropdown=id,$("#dropdown-"+id).toggleClass("hide "),$("#invisible-cover").toggleClass("hide ")},$scope.hideDropdown=function(){$("#invisible-cover").addClass("hide"),$("#dropdown-"+currentActiveDropdown).addClass("hide")},$scope.zoomImage=function(orImg){$(".popup-inactive").toggleClass("popup-inactive popup-active"),$("#image-spinner").show();var imgWrap=$("#full-image");imgWrap.html(orImg);var wrapWidth=imgWrap.width(),wrapHeight=imgWrap.height();setTimeout(function(){var img=imgWrap.children(),imgWidth=img.width(),imgHeight=img.height();wrapWidth>imgWidth&&wrapHeight>imgHeight?(imgWrap.addClass("image-normal"),img.addClass("size-auto")):imgWidth>=wrapWidth&&imgHeight>=wrapHeight?imgWidth>=imgHeight?img.css("width","100%"):img.css("height","100%"):(wrapWidth>=imgWidth?img.addClass("width-auto"):img.addClass("width-full"),wrapHeight>=imgHeight?img.addClass("height-auto"):img.addClass("height-full")),$("#image-spinner").hide(),$("#full-image img").show()},1e3)},$scope.$on("$viewContentLoaded",function(){setTimeout(function(){$scope.displayPosts()},1e3),SessionService.get("recentMissionCompleted")&&($scope.feedbackPopdown=1,SessionService.unset("recentMissionCompleted"))}),$scope.report=function(post_id,user_id,group_id){dropdownService.newDropdown("reportPostConfirmation",12e3,"Tap here to report the post! "),postReportIDs.post_id=post_id,postReportIDs.user_id=user_id,postReportIDs.group_id=group_id,console.log(postReportIDs)},$scope.focusComment=function(id){$("#post-"+id+" .comment-new input").focus()},$scope.reportComment=function(post_id,comment_id,user_id,group_id){dropdownService.newDropdown("reportCommentConfirmation",12e3,"Tap here to report the comment!  "),commentReportIDs.post_id=post_id,commentReportIDs.comment_id=comment_id,commentReportIDs.user_id=user_id,commentReportIDs.group_id=group_id,console.log(commentReportIDs)},$scope.loadMoreData=function(){if(!$routeParams.postid){$scope.displayLoading=!0;var data={groupid:$scope.currentGroup,limitfrom:$scope.posts.length};$scope.loadingData===!1&&($scope.loadingData=!0,$http.post(absolutePath+"/api/group/posts",data).then(function(result){angular.forEach(result.data,function(post,key){if(post.status&&$scope.testYoutube(post.status)){if(post.status.indexOf("v=")>=0)var vidID=post.status.split("v=")[1];else var vidID=post.status.split(".be/")[1];post.status="<iframe width='560' height='315' class='youtube-player' type='text/html' src='https://www.youtube.com/embed/"+vidID+"' frameborder='0' allowfullscreen></iframe>"}$scope.posts.push(post)}),$scope.loadingData=!1,$scope.displayLoading=!1}))}},$scope.addComment=function(event,post){if(event.preventDefault(),console.log(post.activecomment),""!=post.activecomment){var currentUser=angular.fromJson($scope.user),comment={comment:post.activecomment,user:currentUser,time:moment().fromNow(),user_id:currentUser.id,post_id:post.id};post.comments.push(comment),post.activecomment="",APICallService.addComment(comment)}post.activecomment=""},$scope.closePopup=function(){$scope.feedbackPopdown=0,SessionService.unset("recentMissionCompleted"),$route.reload()},$scope.editPost=function(id){SessionService.set("postedit.id",id),location.href="#/editpost"},$scope.toggleText=function(id){$("#post-mission-"+id).toggleClass("open closed").toggleClass("orange "),$("#post-mission-"+id).find(".mission-content").slideToggle(),$("#post-mission-"+id).find(".mission-title .icon").toggleClass("plus minus")}}),app.factory("postFactory",function($http){return{getPosts:$http({method:"POST"})}}),app.filter("htmlStripper",function(){return function(text){return String(text).replace(/<[^>]+>/gm,"")}}),app.service("APICallService",function($http,$location,$rootScope,SessionService,FlashService,$q,Upload){return{getNativeAppStatus:function(){var status=$http({method:"GET",url:"/api/global/isNativeApp",data:{}});return status},addPost:function(post){return Upload.http({method:"POST",url:"api/add/post",headers:{"Content-Type":void 0},transformRequest:function(data){var formData=new FormData;return formData.append("post",angular.toJson(data.postData)),formData.append("file",data.file),formData},data:{postData:post,file:post.status_file}}).progress(function(evt){appViews.updateProgress(parseInt(100*evt.loaded/evt.total))})},fetchPosts:function(userid,groupid){},fetchPendingTask:function(userid,groupid){console.log("fetchPendingTask"),$http.post(absolutePath+"/api/mission/getPendingTask",{groupid:groupid}).success(function(data,status,headers,config){console.log("getPendingTask-success");var pendingTaskDetails={title:data.title,mission:data.mission,didyouknow:data.didyouknow,reference:data.reference,taskid:data.taskid};SessionService.set("pendingTaskDetails",angular.toJson(pendingTaskDetails)),SessionService.set("pendingTask",data.taskid),$("#hideCurrentMission").css("display","none")}).error(function(data,status,headers,config){console.log("error")})},fetchPendingT:function(userid,groupid){$http.post(absolutePath+"/api/mission/getPendingTask",{groupid:groupid}).success(function(data,status,headers,config){$scope.pendingTaskDetails={
title:data.title,didyouknow:data.didyouknow,reference:data.reference,taskid:data.taskid},SessionService.set("pendingTaskDetails",angular.toJson($scope.pendingTaskDetails)),SessionService.set("pendingTask",data.taskid),$("#hideCurrentMission").css("display","none")}).error(function(data,status,headers,config){})},likePost:function(userid,groupid,postid){var like=$http({method:"POST",url:"/api/user/post/like",data:{userid:userid,groupid:groupid,postid:postid}});return like},acceptMission:function(userid,groupid,taskid){return SessionService.get("pendingTask")?void 0:$http({url:"/api/user/acceptmission",method:"POST",data:{userid:userid,groupid:groupid,taskid:taskid}})},fetchWellbeingTracks:function(groupid){console.log("Groupid: "+groupid),$http({url:"api/user/wellbeingtracks",method:"POST",data:{groupid:groupid}}).then(function(result){console.log("Wellbeing data fetched"),console.log(result.data),SessionService.set("moodmap",angular.toJson(result.data))})},fetchWellbeingData:function(groupid){return console.log("Groupid: "+groupid),$http({url:"api/user/wellbeingtracks",method:"POST",data:{groupid:groupid}})},addComment:function(comment){({comment:comment.comment,post_id:comment.post_id,user_id:comment.user_id});$http({url:"api/add/comment",method:"POST",data:{comment:comment.comment,post_id:comment.post_id,user_id:comment.user_id}}).then(function(result){})},markSurveyComplete:function(survey){$http({url:"api/user/survey/complete",method:"POST",data:{survey:survey}}).then(function(){$location.path("/main")})},updateMood:function(groupid,mood){return $http({url:"api/user/mood/update",method:"POST",data:{groupid:groupid,mood:mood}})},updateTaskScore:function(task,score){return $http({url:"api/user/taskscore",method:"POST",data:{taskid:task,score:score}})},progressBar:function(groupid){return console.log("Sending the feedback"),"string"},sendFeedback:function(feedbackText){return $http({url:"api/user/feedback",method:"POST",data:{feedback:feedbackText}})}}}),app.service("AuthenticationService",function($http,$location,SessionService,FlashService,$rootScope,dropdownService){var cacheSession=function(data){SessionService.set("authenticated",!0),SessionService.set("user",JSON.stringify(data)),usingUniWebView=data.isOnApp,1==data.notification?1==SessionService.get("liveAppNotificationSession"):0==SessionService.get("liveAppNotificationSession"),SessionService.set("moodCheck",!0)},uncacheSession=function(){var notType=SessionService.get("notificationType");SessionService.clearAll(),SessionService.set("notificationType",notType)},LoginError=function(response){"Your account has been suspended"==response?dropdownService.newDropdown("notification",5e3,response.flash):dropdownService.newDropdown("warning",5e3,response.flash),$rootScope.removeAjaxLoader()};return{login:function(credentials){var login=$http.post(absolutePath+"/api/auth/login",credentials);return login.success(cacheSession),login.error(LoginError),login},logout:function(){var logout=$http.get("/api/auth/logout");return logout.success(uncacheSession),logout},isLoggedIn:function(){return SessionService.get("authenticated")}}}),app.service("dropdownService",function($http,$location,SessionService,FlashService,$rootScope,$timeout,$compile){var dropdown_stack=[],dropdown_duration=4e6,dropdown_type="",dropdownFlag=0,newDropdownRef=this.newDropdown=function(type,duration,message,notType,id){var html;switch(dropdown_type=type,type){case"notification":var link="";switch(notType){case"message":link="/#/message/"+id;break;case"newgroupmessage":link="/#/message/view/"+id;break;case"newlike":case"newcomment":case"newcommentother":link="/#/wall/"+id}html="<a href='"+link+"'><div class='popdown notification-green'><div class='notification-msg'><h4>"+message+"</h4></div></div></a>";break;case"warning":html='<div class="popdown warning-red"><div class="notification-msg"><h4>'+message+"</h4></div></div>";break;case"emotion":html='<div class="popdown container" id="emoicon"><div class="notification-type"><h3>How are you feeling?</h3></div><div class="notification-msg"><a href="#/main/mood/1"><div class="emoji-mood-container"><div class="mood-emoji emoji-5">&nbsp;</div><div class="mood-description"><p>Terrible</p></div></div></a><a href="#/main/mood/2"><div class="emoji-mood-container"><div class="mood-emoji emoji-4">&nbsp;</div><div class="mood-description"><p>Not Great</p></div></div></a><a href="#/main/mood/3"><div class="emoji-mood-container"><div class="mood-emoji emoji-3">&nbsp;</div><div class="mood-description"><p>Okay</p></div></div></a><a href="#/main/mood/4"><div class="emoji-mood-container"><div class="mood-emoji emoji-2">&nbsp;</div><div class="mood-description"><p>Good</p></div></div></a><a href="#/main/mood/5"><div class="emoji-mood-container"><div class="mood-emoji emoji-1">&nbsp;</div><div class="mood-description"><p>Fantastic</p></div></div></a></div></div>';break;case"pushNotificationReminder":html='<div class="popdown notification-green"><div class="notification-msg"><h4>'+message+"</h4></div></div>";break;case"reportCommentConfirmation":html='<div class="popdown notification-green"><div class="notification-msg"><h4>'+message+"</h4></div></div>";break;case"reportPostConfirmation":html='<div class="popdown notification-green"><div class="notification-msg"><h4>'+message+"</h4></div></div>";break;case"reportCompletedNotification":html="<div class='popdown notification-green'><div class='notification-msg'><h4>"+message+"</h4></div></div>"}html=html.replace(/['"]/g,"&quot;"),SessionService.get("notificationType")!=message&&(dropdown_stack.push('{"html" : "'+html+'", "duration" : '+duration+" }"),SessionService.set("notificationType",message),dropdownFlag++,dropdown_stack.length<=1&&dropDownInRef())},dropDownInRef=this.dropdownIn=function(){if(dropdown_stack.length>0){var html=JSON.parse(dropdown_stack[0]).html;html=html.replace(/&quot;/g,'"');var link=html;$("body").append(link),"emotion"!=dropdown_type&&$(".popdown").click(function(){dismissDropdownRef(),"pushNotificationReminder"==dropdown_type&&(window.location.href="#/notificationUserAdmin"),SessionService.unset("notificationType")}),"reportCommentConfirmation"==dropdown_type&&$(".popdown").click(function(){dismissDropdownRef(),SessionService.unset("notificationType"),$http.post(absolutePath+"/api/comment/report",{postid:commentReportIDs.post_id,commentid:commentReportIDs.comment_id,userid:commentReportIDs.user_id,groupid:commentReportIDs.group_id}).then(function(result){console.log(result),setTimeout(function(){newDropdownRef("reportCompletedNotification",1e4,"The comment has been reported as inappropriate")},1200)}),$("#comment-report-"+commentReportIDs.comment_id).remove(),SessionService.unset("notificationType")}),"reportPostConfirmation"==dropdown_type&&$(".popdown").click(function(){dismissDropdownRef(),SessionService.unset("notificationType"),console.log("ss"),console.log(postReportIDs),$http.post(absolutePath+"/api/post/report",{postid:postReportIDs.post_id,userid:postReportIDs.user_id,groupid:postReportIDs.group_id}).then(function(result){console.log("Send Email : OK"),setTimeout(function(){newDropdownRef("reportCompletedNotification",5e3,"The post has been reported as inappropriate")},1200)}),$("#post-report-"+postReportIDs.post_id).remove(),SessionService.unset("notificationType")}),activeDropDownRef(JSON.parse(dropdown_stack[0]).duration)}},dismissDropdownRef=this.dismissDropdown=function(duration){$(".popdown").css("top","-14%"),setTimeout(function(){$(".popdown").remove(),dropdown_stack.shift(),dropDownInRef()},1e3)},activeDropDownRef=this.activeDropDown=function(duration){function makeTimeoutFunc(){return function(){$(".popdown").css("top","0"),setTimeout(function(){$(".popdown").css("top","-14%"),setTimeout(function(){$(".popdown").remove(),dropdown_stack.shift(),SessionService.unset("notificationType"),dropdownFlag=0,dropDownInRef()},1e3)},dropdown_duration)}}dropdown_duration=duration,setTimeout(makeTimeoutFunc(),500)}}),app.factory("FlashService",function($rootScope){return{show:function(message){$rootScope.removeAjaxLoader()},showSuccess:function(message){$rootScope.successMessage=message},showError:function(message){$rootScope.errorMessage=message},clear:function(){$rootScope.flash="",$rootScope.successMessage="",$rootScope.errorMessage=""}}}),app.factory("globalAppNotification",function(dropdownService){return{callNotification:function(name,type,id){var msg="sent you a message";"newgroupmessage"==type&&(msg="sent you a group message"),"newlike"==type&&(msg="likes your post"),"newcomment"==type&&(msg="has commented on your post"),"newcommentother"==type&&(msg="has commented on a post you commented on"),"newgroupmember"==type&&(msg="has joined your team"),"missionpending"==type&&(msg="have one mission pending"),"missionpending"!=type&&dropdownService.newDropdown("notification",5e3,name+" "+msg,type,id)},webNotification:function(message){if("Notification"in window)if("granted"===Notification.permission){new Notification(message)}else Notification.requestPermission(function(permission){if("granted"===permission){new Notification(message)}});else alert("This browser does not support desktop notification")}}}),app.factory("requestNotificationService",function($http,SessionService,globalAppNotification){var temp=0,tempISE=0;return{notification:function(){$http.post(absolutePath+"/api/global/notificationNum").success(function(data,status,headers,config){console.log("Notification Data"),console.log(data),"false"!=data?($(".notification-alert").css("display","block"),$("#side-nav-notification-number").css("display","block")):($(".notification-alert").css("display","none"),$("#side-nav-notification-number").css("display","none")),data.count>10?($(".notification-alert").html("10+"),$("#side-nav-notification-number").html("10+")):($(".notification-alert").html(data.count),$("#side-nav-notification-number").html(data.count));JSON.parse(SessionService.get("user"));"true"==SessionService.get("liveAppNotificationSession")&&("false"==data?(tempISE=1,$("#side-nav-notification-number").css("display","none"),$("#side-nav-message-number").css("display","none")):(1==data.count&&1==tempISE&&1!=temp&&globalAppNotification.callNotification(data.user[0].firstname+" "+data.user[0].lastname,data.type,data.source_id),data.count>temp&&0!=temp&&("message"==data.type?globalAppNotification.callNotification(data.user[0].firstname+" "+data.user[0].lastname,data.type,data.source_user_id):globalAppNotification.callNotification(data.user[0].firstname+" "+data.user[0].lastname,data.type,data.source_id),temp=0))),temp=data.count})}}}),app.factory("SessionService",function(){return{get:function(key){return sessionStorage.getItem(key)},set:function(key,val){return sessionStorage.setItem(key,val)},unset:function(key){return sessionStorage.removeItem(key)},clearAll:function(){return sessionStorage.clear()}}});